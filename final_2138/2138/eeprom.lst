ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 1


   1              		.cpu arm7tdmi
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"eeprom.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	eepromPoll
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  21              		.type	eepromPoll, %function
  22              	eepromPoll:
  23              	.LFB0:
  24              		.file 1 "eeprom.c"
   1:eeprom.c      **** /******************************************************************************
   2:eeprom.c      ****  * Includes
   3:eeprom.c      ****  *****************************************************************************/
   4:eeprom.c      **** #include "general.h"
   5:eeprom.c      **** #include "i2c.h"
   6:eeprom.c      **** 
   7:eeprom.c      **** /******************************************************************************
   8:eeprom.c      ****  * Defines and typedefs
   9:eeprom.c      ****  *****************************************************************************/
  10:eeprom.c      **** 
  11:eeprom.c      **** #define EEPROM_SIZE       0x2000  //64kbit = 8KByte
  12:eeprom.c      **** #define LOCAL_EEPROM_ADDR 0x0
  13:eeprom.c      **** #define EEPROM_ADDR       0xA0
  14:eeprom.c      **** 
  15:eeprom.c      **** #define I2C_EEPROM_ADDR   (EEPROM_ADDR + (LOCAL_EEPROM_ADDR << 1))
  16:eeprom.c      **** #define I2C_EEPROM_RCV    (EEPROM_ADDR + (LOCAL_EEPROM_ADDR << 1) + 0x01)
  17:eeprom.c      **** #define I2C_EEPROM_SND    (EEPROM_ADDR + (LOCAL_EEPROM_ADDR << 1) + 0x00)
  18:eeprom.c      **** 
  19:eeprom.c      **** 
  20:eeprom.c      **** /******************************************************************************
  21:eeprom.c      ****  * Implementation of public functions
  22:eeprom.c      ****  *****************************************************************************/
  23:eeprom.c      **** 
  24:eeprom.c      **** /******************************************************************************
  25:eeprom.c      ****  *
  26:eeprom.c      ****  * Description:
  27:eeprom.c      ****  *    Waits till I2C returns ACK (after BURN cycle)
  28:eeprom.c      ****  *
  29:eeprom.c      ****  *    Note: After a stop condition, you may need a bus free time before you 
  30:eeprom.c      ****  *          can generate a new start condition.
  31:eeprom.c      ****  *
  32:eeprom.c      ****  * Returns:
  33:eeprom.c      ****  *    I2C_CODE_OK or I2C_CODE_ERROR
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 2


  34:eeprom.c      ****  *
  35:eeprom.c      ****  *****************************************************************************/
  36:eeprom.c      **** tS8 
  37:eeprom.c      **** eepromPoll(void)
  38:eeprom.c      **** {
  25              		.loc 1 38 0
  26              		.cfi_startproc
  27              		@ Function supports interworking.
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 90B5     		push	{r4, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  39:eeprom.c      ****   tS8 retCode  = I2C_CODE_OK;
  42              		.loc 1 39 0
  43 0006 FB1D     		adds	r3, r7, #7
  44 0008 0122     		movs	r2, #1
  45 000a 1A70     		strb	r2, [r3]
  40:eeprom.c      ****   tU8 status   = 0;
  46              		.loc 1 40 0
  47 000c 7B1D     		adds	r3, r7, #5
  48 000e 0022     		movs	r2, #0
  49 0010 1A70     		strb	r2, [r3]
  41:eeprom.c      ****   tBool burnEnd = FALSE;
  50              		.loc 1 41 0
  51 0012 BB1D     		adds	r3, r7, #6
  52 0014 0022     		movs	r2, #0
  53 0016 1A70     		strb	r2, [r3]
  42:eeprom.c      **** 
  43:eeprom.c      ****   while(burnEnd == FALSE)
  54              		.loc 1 43 0
  55 0018 44E0     		b	.L2
  56              	.L9:
  44:eeprom.c      ****   {
  45:eeprom.c      ****     /* Generate Start condition */
  46:eeprom.c      ****     retCode = i2cStart();
  57              		.loc 1 46 0
  58 001a FC1D     		adds	r4, r7, #7
  59 001c FFF7FEFF 		bl	i2cStart
  60 0020 0300     		movs	r3, r0
  61 0022 2370     		strb	r3, [r4]
  47:eeprom.c      **** 
  48:eeprom.c      ****     /* Transmit SLA+W */
  49:eeprom.c      ****     if(retCode == I2C_CODE_OK)
  62              		.loc 1 49 0
  63 0024 FB1D     		adds	r3, r7, #7
  64 0026 1B78     		ldrb	r3, [r3]
  65 0028 1B06     		lsls	r3, r3, #24
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 3


  66 002a 1B16     		asrs	r3, r3, #24
  67 002c 012B     		cmp	r3, #1
  68 002e 12D1     		bne	.L3
  50:eeprom.c      ****     {
  51:eeprom.c      ****       /* Write SLA+W */
  52:eeprom.c      ****       retCode = i2cPutChar(I2C_EEPROM_SND);
  69              		.loc 1 52 0
  70 0030 FC1D     		adds	r4, r7, #7
  71 0032 A020     		movs	r0, #160
  72 0034 FFF7FEFF 		bl	i2cPutChar
  73 0038 0300     		movs	r3, r0
  74 003a 2370     		strb	r3, [r4]
  53:eeprom.c      ****       while(retCode == I2C_CODE_BUSY)
  75              		.loc 1 53 0
  76 003c 05E0     		b	.L4
  77              	.L5:
  54:eeprom.c      ****       {
  55:eeprom.c      ****         retCode = i2cPutChar(I2C_EEPROM_SND);
  78              		.loc 1 55 0
  79 003e FC1D     		adds	r4, r7, #7
  80 0040 A020     		movs	r0, #160
  81 0042 FFF7FEFF 		bl	i2cPutChar
  82 0046 0300     		movs	r3, r0
  83 0048 2370     		strb	r3, [r4]
  84              	.L4:
  53:eeprom.c      ****       while(retCode == I2C_CODE_BUSY)
  85              		.loc 1 53 0
  86 004a FB1D     		adds	r3, r7, #7
  87 004c 1B78     		ldrb	r3, [r3]
  88 004e 1B06     		lsls	r3, r3, #24
  89 0050 1B16     		asrs	r3, r3, #24
  90 0052 0433     		adds	r3, r3, #4
  91 0054 F3D0     		beq	.L5
  92              	.L3:
  56:eeprom.c      ****       }
  57:eeprom.c      ****     }
  58:eeprom.c      **** 
  59:eeprom.c      ****     if(retCode == I2C_CODE_OK)
  93              		.loc 1 59 0
  94 0056 FB1D     		adds	r3, r7, #7
  95 0058 1B78     		ldrb	r3, [r3]
  96 005a 1B06     		lsls	r3, r3, #24
  97 005c 1B16     		asrs	r3, r3, #24
  98 005e 012B     		cmp	r3, #1
  99 0060 1ED1     		bne	.L6
  60:eeprom.c      ****     {
  61:eeprom.c      ****       /* Wait until SLA+W transmitted */
  62:eeprom.c      ****       /* Get new status */
  63:eeprom.c      ****       status = i2cCheckStatus();
 100              		.loc 1 63 0
 101 0062 7C1D     		adds	r4, r7, #5
 102 0064 FFF7FEFF 		bl	i2cCheckStatus
 103 0068 0300     		movs	r3, r0
 104 006a 2370     		strb	r3, [r4]
  64:eeprom.c      **** 
  65:eeprom.c      ****       if(status == 0x18)
 105              		.loc 1 65 0
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 4


 106 006c 7B1D     		adds	r3, r7, #5
 107 006e 1B78     		ldrb	r3, [r3]
 108 0070 182B     		cmp	r3, #24
 109 0072 03D1     		bne	.L7
  66:eeprom.c      ****       {
  67:eeprom.c      ****         /* data transmitted and ACK received */
  68:eeprom.c      ****         burnEnd = TRUE;
 110              		.loc 1 68 0
 111 0074 BB1D     		adds	r3, r7, #6
 112 0076 0122     		movs	r2, #1
 113 0078 1A70     		strb	r2, [r3]
 114 007a 11E0     		b	.L6
 115              	.L7:
  69:eeprom.c      ****       }
  70:eeprom.c      ****       else if(status == 0x20)
 116              		.loc 1 70 0
 117 007c 7B1D     		adds	r3, r7, #5
 118 007e 1B78     		ldrb	r3, [r3]
 119 0080 202B     		cmp	r3, #32
 120 0082 03D1     		bne	.L8
  71:eeprom.c      ****       {
  72:eeprom.c      ****         /* data transmitted and ACK not received */
  73:eeprom.c      ****         // send start bit, start again
  74:eeprom.c      ****         burnEnd = FALSE;
 121              		.loc 1 74 0
 122 0084 BB1D     		adds	r3, r7, #6
 123 0086 0022     		movs	r2, #0
 124 0088 1A70     		strb	r2, [r3]
 125 008a 09E0     		b	.L6
 126              	.L8:
  75:eeprom.c      ****       }
  76:eeprom.c      ****       else if( status != 0xf8 )
 127              		.loc 1 76 0
 128 008c 7B1D     		adds	r3, r7, #5
 129 008e 1B78     		ldrb	r3, [r3]
 130 0090 F82B     		cmp	r3, #248
 131 0092 05D0     		beq	.L6
  77:eeprom.c      ****       {
  78:eeprom.c      ****         /* error ---*/
  79:eeprom.c      ****         retCode = I2C_CODE_ERROR;
 132              		.loc 1 79 0
 133 0094 FB1D     		adds	r3, r7, #7
 134 0096 FF22     		movs	r2, #255
 135 0098 1A70     		strb	r2, [r3]
  80:eeprom.c      ****         burnEnd = TRUE;
 136              		.loc 1 80 0
 137 009a BB1D     		adds	r3, r7, #6
 138 009c 0122     		movs	r2, #1
 139 009e 1A70     		strb	r2, [r3]
 140              	.L6:
  81:eeprom.c      ****       }
  82:eeprom.c      ****     }
  83:eeprom.c      **** 
  84:eeprom.c      ****     /* Generate Stop condition */
  85:eeprom.c      ****     i2cStop();
 141              		.loc 1 85 0
 142 00a0 FFF7FEFF 		bl	i2cStop
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 5


 143              	.L2:
  43:eeprom.c      ****   {
 144              		.loc 1 43 0
 145 00a4 BB1D     		adds	r3, r7, #6
 146 00a6 1B78     		ldrb	r3, [r3]
 147 00a8 002B     		cmp	r3, #0
 148 00aa B6D0     		beq	.L9
  86:eeprom.c      **** 
  87:eeprom.c      ****   } // end of while 
  88:eeprom.c      **** 
  89:eeprom.c      **** 
  90:eeprom.c      ****   return retCode;
 149              		.loc 1 90 0
 150 00ac FB1D     		adds	r3, r7, #7
 151 00ae 1B78     		ldrb	r3, [r3]
 152 00b0 1B06     		lsls	r3, r3, #24
 153 00b2 1B16     		asrs	r3, r3, #24
  91:eeprom.c      **** 
  92:eeprom.c      **** }
 154              		.loc 1 92 0
 155 00b4 1800     		movs	r0, r3
 156 00b6 BD46     		mov	sp, r7
 157 00b8 03B0     		add	sp, sp, #12
 158              		@ sp needed
 159 00ba 90BC     		pop	{r4, r7}
 160 00bc 02BC     		pop	{r1}
 161 00be 0847     		bx	r1
 162              		.cfi_endproc
 163              	.LFE0:
 164              		.size	eepromPoll, .-eepromPoll
 165              		.align	1
 166              		.global	eepromStartRead
 167              		.syntax unified
 168              		.code	16
 169              		.thumb_func
 170              		.fpu softvfp
 171              		.type	eepromStartRead, %function
 172              	eepromStartRead:
 173              	.LFB1:
  93:eeprom.c      **** 
  94:eeprom.c      **** /******************************************************************************
  95:eeprom.c      ****  *
  96:eeprom.c      ****  * Description:
  97:eeprom.c      ****  *    Start a read
  98:eeprom.c      ****  *
  99:eeprom.c      ****  * Params:
 100:eeprom.c      ****  *    [in] devAddr - device address
 101:eeprom.c      ****  *    [in] address - eeprom address
 102:eeprom.c      ****  *
 103:eeprom.c      ****  * Returns:
 104:eeprom.c      ****  *    I2C_CODE_OK or I2C_CODE_ERROR
 105:eeprom.c      ****  *
 106:eeprom.c      ****  *****************************************************************************/
 107:eeprom.c      **** tS8 
 108:eeprom.c      **** eepromStartRead(tU8  devAddr, 
 109:eeprom.c      ****                 tU16 address)
 110:eeprom.c      **** {
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 6


 174              		.loc 1 110 0
 175              		.cfi_startproc
 176              		@ Function supports interworking.
 177              		@ args = 0, pretend = 0, frame = 16
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 00c0 B0B5     		push	{r4, r5, r7, lr}
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 16
 182              		.cfi_offset 4, -16
 183              		.cfi_offset 5, -12
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 00c2 84B0     		sub	sp, sp, #16
 187              	.LCFI4:
 188              		.cfi_def_cfa_offset 32
 189 00c4 00AF     		add	r7, sp, #0
 190              	.LCFI5:
 191              		.cfi_def_cfa_register 7
 192 00c6 0200     		movs	r2, r0
 193 00c8 FB1D     		adds	r3, r7, #7
 194 00ca 1A70     		strb	r2, [r3]
 195 00cc 3B1D     		adds	r3, r7, #4
 196 00ce 0A1C     		adds	r2, r1, #0
 197 00d0 1A80     		strh	r2, [r3]
 111:eeprom.c      ****   tS8 retCode = 0;
 198              		.loc 1 111 0
 199 00d2 0F21     		movs	r1, #15
 200 00d4 7B18     		adds	r3, r7, r1
 201 00d6 0022     		movs	r2, #0
 202 00d8 1A70     		strb	r2, [r3]
 112:eeprom.c      ****   tU8 status  = 0;
 203              		.loc 1 112 0
 204 00da 0E23     		movs	r3, #14
 205 00dc FB18     		adds	r3, r7, r3
 206 00de 0022     		movs	r2, #0
 207 00e0 1A70     		strb	r2, [r3]
 113:eeprom.c      **** 
 114:eeprom.c      ****   /* Generate Start condition */
 115:eeprom.c      ****   retCode = i2cStart();
 208              		.loc 1 115 0
 209 00e2 0D00     		movs	r5, r1
 210 00e4 7C18     		adds	r4, r7, r1
 211 00e6 FFF7FEFF 		bl	i2cStart
 212 00ea 0300     		movs	r3, r0
 213 00ec 2370     		strb	r3, [r4]
 116:eeprom.c      **** 
 117:eeprom.c      ****   /* Transmit address */
 118:eeprom.c      ****   if(retCode == I2C_CODE_OK )
 214              		.loc 1 118 0
 215 00ee 2900     		movs	r1, r5
 216 00f0 7B18     		adds	r3, r7, r1
 217 00f2 1B78     		ldrb	r3, [r3]
 218 00f4 1B06     		lsls	r3, r3, #24
 219 00f6 1B16     		asrs	r3, r3, #24
 220 00f8 012B     		cmp	r3, #1
 221 00fa 19D1     		bne	.L12
 119:eeprom.c      ****   {
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 7


 120:eeprom.c      ****     /* Write SLA+W */
 121:eeprom.c      ****     retCode = i2cPutChar(devAddr);
 222              		.loc 1 121 0
 223 00fc 0F23     		movs	r3, #15
 224 00fe FC18     		adds	r4, r7, r3
 225 0100 FB1D     		adds	r3, r7, #7
 226 0102 1B78     		ldrb	r3, [r3]
 227 0104 1800     		movs	r0, r3
 228 0106 FFF7FEFF 		bl	i2cPutChar
 229 010a 0300     		movs	r3, r0
 230 010c 2370     		strb	r3, [r4]
 122:eeprom.c      ****     while( retCode == I2C_CODE_BUSY )
 231              		.loc 1 122 0
 232 010e 08E0     		b	.L13
 233              	.L14:
 123:eeprom.c      ****     {
 124:eeprom.c      ****       retCode = i2cPutChar( devAddr );
 234              		.loc 1 124 0
 235 0110 0F23     		movs	r3, #15
 236 0112 FC18     		adds	r4, r7, r3
 237 0114 FB1D     		adds	r3, r7, #7
 238 0116 1B78     		ldrb	r3, [r3]
 239 0118 1800     		movs	r0, r3
 240 011a FFF7FEFF 		bl	i2cPutChar
 241 011e 0300     		movs	r3, r0
 242 0120 2370     		strb	r3, [r4]
 243              	.L13:
 122:eeprom.c      ****     while( retCode == I2C_CODE_BUSY )
 244              		.loc 1 122 0
 245 0122 0F23     		movs	r3, #15
 246 0124 FB18     		adds	r3, r7, r3
 247 0126 1B78     		ldrb	r3, [r3]
 248 0128 1B06     		lsls	r3, r3, #24
 249 012a 1B16     		asrs	r3, r3, #24
 250 012c 0433     		adds	r3, r3, #4
 251 012e EFD0     		beq	.L14
 252              	.L12:
 125:eeprom.c      ****     }
 126:eeprom.c      ****   }
 127:eeprom.c      **** 
 128:eeprom.c      ****   if( retCode == I2C_CODE_OK )
 253              		.loc 1 128 0
 254 0130 0F23     		movs	r3, #15
 255 0132 FB18     		adds	r3, r7, r3
 256 0134 1B78     		ldrb	r3, [r3]
 257 0136 1B06     		lsls	r3, r3, #24
 258 0138 1B16     		asrs	r3, r3, #24
 259 013a 012B     		cmp	r3, #1
 260 013c 3DD1     		bne	.L25
 129:eeprom.c      ****   {
 130:eeprom.c      **** #if 0
 131:eeprom.c      ****     /* Wait until data transmitted */
 132:eeprom.c      ****     while(1)
 133:eeprom.c      ****     {
 134:eeprom.c      ****       /* Get new status */
 135:eeprom.c      ****       status = i2cCheckStatus();
 136:eeprom.c      **** 
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 8


 137:eeprom.c      ****       if( (status == 0x18) || (status == 0x28) )
 138:eeprom.c      ****       {
 139:eeprom.c      ****         /* Data transmitted and ACK received */
 140:eeprom.c      **** 
 141:eeprom.c      **** 
 142:eeprom.c      ****         /* Write data */
 143:eeprom.c      ****         retCode = i2cPutChar( (tU8)(address >> 8) );
 144:eeprom.c      ****         while(retCode == I2C_CODE_BUSY)
 145:eeprom.c      ****         {
 146:eeprom.c      ****           retCode = i2cPutChar( (tU8)(address >> 8) );
 147:eeprom.c      ****         }
 148:eeprom.c      ****         break;
 149:eeprom.c      ****       }
 150:eeprom.c      ****       else if(status != 0xf8)
 151:eeprom.c      ****       {
 152:eeprom.c      ****         /* error */
 153:eeprom.c      ****         retCode = I2C_CODE_ERROR;
 154:eeprom.c      ****         break;
 155:eeprom.c      ****       }
 156:eeprom.c      ****     }
 157:eeprom.c      **** #endif
 158:eeprom.c      **** 
 159:eeprom.c      ****     if(retCode == I2C_CODE_OK)
 261              		.loc 1 159 0
 262 013e 0F23     		movs	r3, #15
 263 0140 FB18     		adds	r3, r7, r3
 264 0142 1B78     		ldrb	r3, [r3]
 265 0144 1B06     		lsls	r3, r3, #24
 266 0146 1B16     		asrs	r3, r3, #24
 267 0148 012B     		cmp	r3, #1
 268 014a 36D1     		bne	.L25
 269              	.L21:
 160:eeprom.c      ****     {
 161:eeprom.c      ****       /* Wait until data transmitted */
 162:eeprom.c      ****       while(1)
 163:eeprom.c      ****       {
 164:eeprom.c      ****         /* Get new status */
 165:eeprom.c      ****         status = i2cCheckStatus();
 270              		.loc 1 165 0
 271 014c 0E25     		movs	r5, #14
 272 014e 7C19     		adds	r4, r7, r5
 273 0150 FFF7FEFF 		bl	i2cCheckStatus
 274 0154 0300     		movs	r3, r0
 275 0156 2370     		strb	r3, [r4]
 166:eeprom.c      **** 
 167:eeprom.c      ****         if( (status == 0x18) || (status == 0x28) )
 276              		.loc 1 167 0
 277 0158 7B19     		adds	r3, r7, r5
 278 015a 1B78     		ldrb	r3, [r3]
 279 015c 182B     		cmp	r3, #24
 280 015e 04D0     		beq	.L16
 281              		.loc 1 167 0 is_stmt 0 discriminator 1
 282 0160 0E23     		movs	r3, #14
 283 0162 FB18     		adds	r3, r7, r3
 284 0164 1B78     		ldrb	r3, [r3]
 285 0166 282B     		cmp	r3, #40
 286 0168 1ED1     		bne	.L17
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 9


 287              	.L16:
 168:eeprom.c      ****         {
 169:eeprom.c      ****           /* Data transmitted and ACK received */
 170:eeprom.c      **** 
 171:eeprom.c      **** 
 172:eeprom.c      ****           /* Write data */
 173:eeprom.c      ****           retCode = i2cPutChar( (tU8)(address & 0xff) );
 288              		.loc 1 173 0 is_stmt 1
 289 016a 3B1D     		adds	r3, r7, #4
 290 016c 1B88     		ldrh	r3, [r3]
 291 016e 1B06     		lsls	r3, r3, #24
 292 0170 1B0E     		lsrs	r3, r3, #24
 293 0172 0F22     		movs	r2, #15
 294 0174 BC18     		adds	r4, r7, r2
 295 0176 1800     		movs	r0, r3
 296 0178 FFF7FEFF 		bl	i2cPutChar
 297 017c 0300     		movs	r3, r0
 298 017e 2370     		strb	r3, [r4]
 174:eeprom.c      ****           while( retCode == I2C_CODE_BUSY )
 299              		.loc 1 174 0
 300 0180 0AE0     		b	.L18
 301              	.L19:
 175:eeprom.c      ****           {
 176:eeprom.c      ****             retCode = i2cPutChar( (tU8)(address & 0xff) );
 302              		.loc 1 176 0
 303 0182 3B1D     		adds	r3, r7, #4
 304 0184 1B88     		ldrh	r3, [r3]
 305 0186 1B06     		lsls	r3, r3, #24
 306 0188 1B0E     		lsrs	r3, r3, #24
 307 018a 0F22     		movs	r2, #15
 308 018c BC18     		adds	r4, r7, r2
 309 018e 1800     		movs	r0, r3
 310 0190 FFF7FEFF 		bl	i2cPutChar
 311 0194 0300     		movs	r3, r0
 312 0196 2370     		strb	r3, [r4]
 313              	.L18:
 174:eeprom.c      ****           while( retCode == I2C_CODE_BUSY )
 314              		.loc 1 174 0
 315 0198 0F23     		movs	r3, #15
 316 019a FB18     		adds	r3, r7, r3
 317 019c 1B78     		ldrb	r3, [r3]
 318 019e 1B06     		lsls	r3, r3, #24
 319 01a0 1B16     		asrs	r3, r3, #24
 320 01a2 0433     		adds	r3, r3, #4
 321 01a4 EDD0     		beq	.L19
 177:eeprom.c      ****           }
 178:eeprom.c      **** 
 179:eeprom.c      ****           break;
 322              		.loc 1 179 0
 323 01a6 08E0     		b	.L25
 324              	.L17:
 180:eeprom.c      ****         }
 181:eeprom.c      ****         else if( status != 0xf8 )
 325              		.loc 1 181 0
 326 01a8 0E23     		movs	r3, #14
 327 01aa FB18     		adds	r3, r7, r3
 328 01ac 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 10


 329 01ae F82B     		cmp	r3, #248
 330 01b0 CCD0     		beq	.L21
 182:eeprom.c      ****         {
 183:eeprom.c      ****           /*  error */
 184:eeprom.c      ****           retCode = I2C_CODE_ERROR;
 331              		.loc 1 184 0
 332 01b2 0F23     		movs	r3, #15
 333 01b4 FB18     		adds	r3, r7, r3
 334 01b6 FF22     		movs	r2, #255
 335 01b8 1A70     		strb	r2, [r3]
 336              	.L25:
 185:eeprom.c      ****           break;
 186:eeprom.c      ****         }
 187:eeprom.c      ****       }
 188:eeprom.c      ****     }
 189:eeprom.c      ****   }
 190:eeprom.c      **** 
 191:eeprom.c      ****   /* Wait until data transmitted */
 192:eeprom.c      ****   while(1)
 193:eeprom.c      ****   {
 194:eeprom.c      ****     /* Get new status */
 195:eeprom.c      ****     status = i2cCheckStatus();
 337              		.loc 1 195 0
 338 01ba 0E25     		movs	r5, #14
 339 01bc 7C19     		adds	r4, r7, r5
 340 01be FFF7FEFF 		bl	i2cCheckStatus
 341 01c2 0300     		movs	r3, r0
 342 01c4 2370     		strb	r3, [r4]
 196:eeprom.c      **** 
 197:eeprom.c      ****     if(status == 0x28)
 343              		.loc 1 197 0
 344 01c6 7B19     		adds	r3, r7, r5
 345 01c8 1B78     		ldrb	r3, [r3]
 346 01ca 282B     		cmp	r3, #40
 347 01cc 09D0     		beq	.L34
 198:eeprom.c      ****     {
 199:eeprom.c      ****       /* Data transmitted and ACK received */
 200:eeprom.c      ****       break;
 201:eeprom.c      ****     }
 202:eeprom.c      ****     else if( status != 0xf8 )
 348              		.loc 1 202 0
 349 01ce 0E23     		movs	r3, #14
 350 01d0 FB18     		adds	r3, r7, r3
 351 01d2 1B78     		ldrb	r3, [r3]
 352 01d4 F82B     		cmp	r3, #248
 353 01d6 F0D0     		beq	.L25
 203:eeprom.c      ****     {
 204:eeprom.c      ****       /* error */
 205:eeprom.c      ****       retCode = I2C_CODE_ERROR;
 354              		.loc 1 205 0
 355 01d8 0F23     		movs	r3, #15
 356 01da FB18     		adds	r3, r7, r3
 357 01dc FF22     		movs	r2, #255
 358 01de 1A70     		strb	r2, [r3]
 206:eeprom.c      ****       break;
 359              		.loc 1 206 0
 360 01e0 00E0     		b	.L23
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 11


 361              	.L34:
 200:eeprom.c      ****     }
 362              		.loc 1 200 0
 363 01e2 C046     		nop
 364              	.L23:
 207:eeprom.c      ****     }
 208:eeprom.c      ****   }
 209:eeprom.c      **** 
 210:eeprom.c      ****   /* Generate Start condition */
 211:eeprom.c      ****   retCode = i2cRepeatStart();
 365              		.loc 1 211 0
 366 01e4 0F25     		movs	r5, #15
 367 01e6 7C19     		adds	r4, r7, r5
 368 01e8 FFF7FEFF 		bl	i2cRepeatStart
 369 01ec 0300     		movs	r3, r0
 370 01ee 2370     		strb	r3, [r4]
 212:eeprom.c      **** 
 213:eeprom.c      ****   /* Transmit device address */
 214:eeprom.c      ****   if( retCode == I2C_CODE_OK)
 371              		.loc 1 214 0
 372 01f0 7B19     		adds	r3, r7, r5
 373 01f2 1B78     		ldrb	r3, [r3]
 374 01f4 1B06     		lsls	r3, r3, #24
 375 01f6 1B16     		asrs	r3, r3, #24
 376 01f8 012B     		cmp	r3, #1
 377 01fa 1FD1     		bne	.L32
 215:eeprom.c      ****   {
 216:eeprom.c      ****     /* Write SLA+R */
 217:eeprom.c      ****     retCode = i2cPutChar( devAddr + 0x01 );
 378              		.loc 1 217 0
 379 01fc FB1D     		adds	r3, r7, #7
 380 01fe 1B78     		ldrb	r3, [r3]
 381 0200 0133     		adds	r3, r3, #1
 382 0202 1B06     		lsls	r3, r3, #24
 383 0204 1B0E     		lsrs	r3, r3, #24
 384 0206 0F22     		movs	r2, #15
 385 0208 BC18     		adds	r4, r7, r2
 386 020a 1800     		movs	r0, r3
 387 020c FFF7FEFF 		bl	i2cPutChar
 388 0210 0300     		movs	r3, r0
 389 0212 2370     		strb	r3, [r4]
 218:eeprom.c      ****     while( retCode == I2C_CODE_BUSY )
 390              		.loc 1 218 0
 391 0214 0BE0     		b	.L27
 392              	.L28:
 219:eeprom.c      ****     {
 220:eeprom.c      ****       retCode = i2cPutChar( devAddr + 0x01 );
 393              		.loc 1 220 0
 394 0216 FB1D     		adds	r3, r7, #7
 395 0218 1B78     		ldrb	r3, [r3]
 396 021a 0133     		adds	r3, r3, #1
 397 021c 1B06     		lsls	r3, r3, #24
 398 021e 1B0E     		lsrs	r3, r3, #24
 399 0220 0F22     		movs	r2, #15
 400 0222 BC18     		adds	r4, r7, r2
 401 0224 1800     		movs	r0, r3
 402 0226 FFF7FEFF 		bl	i2cPutChar
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 12


 403 022a 0300     		movs	r3, r0
 404 022c 2370     		strb	r3, [r4]
 405              	.L27:
 218:eeprom.c      ****     while( retCode == I2C_CODE_BUSY )
 406              		.loc 1 218 0
 407 022e 0F23     		movs	r3, #15
 408 0230 FB18     		adds	r3, r7, r3
 409 0232 1B78     		ldrb	r3, [r3]
 410 0234 1B06     		lsls	r3, r3, #24
 411 0236 1B16     		asrs	r3, r3, #24
 412 0238 0433     		adds	r3, r3, #4
 413 023a ECD0     		beq	.L28
 414              	.L32:
 221:eeprom.c      ****     }
 222:eeprom.c      ****   }
 223:eeprom.c      **** 
 224:eeprom.c      ****   /* Wait until SLA+R transmitted */
 225:eeprom.c      ****   while(1)
 226:eeprom.c      ****   {
 227:eeprom.c      ****     /* Get new status */
 228:eeprom.c      ****     status = i2cCheckStatus();
 415              		.loc 1 228 0
 416 023c 0E25     		movs	r5, #14
 417 023e 7C19     		adds	r4, r7, r5
 418 0240 FFF7FEFF 		bl	i2cCheckStatus
 419 0244 0300     		movs	r3, r0
 420 0246 2370     		strb	r3, [r4]
 229:eeprom.c      **** 
 230:eeprom.c      ****     if(status == 0x40)
 421              		.loc 1 230 0
 422 0248 7B19     		adds	r3, r7, r5
 423 024a 1B78     		ldrb	r3, [r3]
 424 024c 402B     		cmp	r3, #64
 425 024e 0FD0     		beq	.L35
 231:eeprom.c      ****     {
 232:eeprom.c      ****       /* Data transmitted and ACK received */
 233:eeprom.c      ****       break;
 234:eeprom.c      ****     }
 235:eeprom.c      ****     else if(status != 0xf8)
 426              		.loc 1 235 0
 427 0250 0E23     		movs	r3, #14
 428 0252 FB18     		adds	r3, r7, r3
 429 0254 1B78     		ldrb	r3, [r3]
 430 0256 F82B     		cmp	r3, #248
 431 0258 04D0     		beq	.L31
 236:eeprom.c      ****     {
 237:eeprom.c      ****       /* error */
 238:eeprom.c      ****       retCode = I2C_CODE_ERROR;
 432              		.loc 1 238 0
 433 025a 0F23     		movs	r3, #15
 434 025c FB18     		adds	r3, r7, r3
 435 025e FF22     		movs	r2, #255
 436 0260 1A70     		strb	r2, [r3]
 239:eeprom.c      ****       break;
 437              		.loc 1 239 0
 438 0262 06E0     		b	.L30
 439              	.L31:
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 13


 440 0264 0F22     		movs	r2, #15
 441 0266 BB18     		adds	r3, r7, r2
 442 0268 BA18     		adds	r2, r7, r2
 443 026a 1278     		ldrb	r2, [r2]
 444 026c 1A70     		strb	r2, [r3]
 228:eeprom.c      **** 
 445              		.loc 1 228 0
 446 026e E5E7     		b	.L32
 447              	.L35:
 233:eeprom.c      ****     }
 448              		.loc 1 233 0
 449 0270 C046     		nop
 450              	.L30:
 240:eeprom.c      ****     }
 241:eeprom.c      ****   }
 242:eeprom.c      **** 
 243:eeprom.c      ****   // Do not generate a stop bit
 244:eeprom.c      **** 
 245:eeprom.c      ****   return retCode;
 451              		.loc 1 245 0
 452 0272 0F23     		movs	r3, #15
 453 0274 FB18     		adds	r3, r7, r3
 454 0276 1B78     		ldrb	r3, [r3]
 455 0278 1B06     		lsls	r3, r3, #24
 456 027a 1B16     		asrs	r3, r3, #24
 246:eeprom.c      **** }
 457              		.loc 1 246 0
 458 027c 1800     		movs	r0, r3
 459 027e BD46     		mov	sp, r7
 460 0280 04B0     		add	sp, sp, #16
 461              		@ sp needed
 462 0282 B0BC     		pop	{r4, r5, r7}
 463 0284 02BC     		pop	{r1}
 464 0286 0847     		bx	r1
 465              		.cfi_endproc
 466              	.LFE1:
 467              		.size	eepromStartRead, .-eepromStartRead
 468              		.align	1
 469              		.global	eepromPageRead
 470              		.syntax unified
 471              		.code	16
 472              		.thumb_func
 473              		.fpu softvfp
 474              		.type	eepromPageRead, %function
 475              	eepromPageRead:
 476              	.LFB2:
 247:eeprom.c      **** 
 248:eeprom.c      **** //-------------------------------------------------------------
 249:eeprom.c      **** // Random Read followed by sequential read
 250:eeprom.c      **** //-------------------------------------------------------------
 251:eeprom.c      **** // Receive buffer:
 252:eeprom.c      **** // Byte 00: DeviceAddress R/Wn=0 (WRITE)
 253:eeprom.c      **** ////////// Byte 01: EEPROM Address MSB   (A14..A08)
 254:eeprom.c      **** // Byte 02: EEPROM Address LSB   (A07..A00)
 255:eeprom.c      **** // Byte 03: DeviceAddress R/Wn=1 (READ)
 256:eeprom.c      **** // Byte 04 to 67: Buffer for data read from EEPROM
 257:eeprom.c      **** //-------------------------------------------------------------
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 14


 258:eeprom.c      **** //  Parameters:
 259:eeprom.c      **** //      pRxData     A pointer to the receive buffer
 260:eeprom.c      **** //      Length      The number of data bytes to receive
 261:eeprom.c      **** //
 262:eeprom.c      **** //  Returns:
 263:eeprom.c      **** //      MA_OK or I2C status code
 264:eeprom.c      **** //
 265:eeprom.c      **** //-------------------------------------------------------------
 266:eeprom.c      **** tS8 
 267:eeprom.c      **** eepromPageRead(tU16 address, 
 268:eeprom.c      ****                tU8* pBuf, 
 269:eeprom.c      ****                tU16 len) 
 270:eeprom.c      **** {
 477              		.loc 1 270 0
 478              		.cfi_startproc
 479              		@ Function supports interworking.
 480              		@ args = 0, pretend = 0, frame = 16
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482 0288 B0B5     		push	{r4, r5, r7, lr}
 483              	.LCFI6:
 484              		.cfi_def_cfa_offset 16
 485              		.cfi_offset 4, -16
 486              		.cfi_offset 5, -12
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 028a 84B0     		sub	sp, sp, #16
 490              	.LCFI7:
 491              		.cfi_def_cfa_offset 32
 492 028c 00AF     		add	r7, sp, #0
 493              	.LCFI8:
 494              		.cfi_def_cfa_register 7
 495 028e 3960     		str	r1, [r7]
 496 0290 1100     		movs	r1, r2
 497 0292 BB1D     		adds	r3, r7, #6
 498 0294 021C     		adds	r2, r0, #0
 499 0296 1A80     		strh	r2, [r3]
 500 0298 3B1D     		adds	r3, r7, #4
 501 029a 0A1C     		adds	r2, r1, #0
 502 029c 1A80     		strh	r2, [r3]
 271:eeprom.c      ****   tS8  retCode = 0;
 503              		.loc 1 271 0
 504 029e 0F21     		movs	r1, #15
 505 02a0 7B18     		adds	r3, r7, r1
 506 02a2 0022     		movs	r2, #0
 507 02a4 1A70     		strb	r2, [r3]
 272:eeprom.c      ****   tU8  status  = 0;
 508              		.loc 1 272 0
 509 02a6 0B23     		movs	r3, #11
 510 02a8 FB18     		adds	r3, r7, r3
 511 02aa 0022     		movs	r2, #0
 512 02ac 1A70     		strb	r2, [r3]
 273:eeprom.c      ****   tU16 i       = 0;
 513              		.loc 1 273 0
 514 02ae 0C23     		movs	r3, #12
 515 02b0 FB18     		adds	r3, r7, r3
 516 02b2 0022     		movs	r2, #0
 517 02b4 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 15


 274:eeprom.c      **** 
 275:eeprom.c      ****   /* Write 4 bytes, see 24C256 Random Read */
 276:eeprom.c      ****   retCode = eepromStartRead(I2C_EEPROM_ADDR, address);
 518              		.loc 1 276 0
 519 02b6 0D00     		movs	r5, r1
 520 02b8 7C18     		adds	r4, r7, r1
 521 02ba BB1D     		adds	r3, r7, #6
 522 02bc 1B88     		ldrh	r3, [r3]
 523 02be 1900     		movs	r1, r3
 524 02c0 A020     		movs	r0, #160
 525 02c2 FFF7FEFF 		bl	eepromStartRead
 526 02c6 0300     		movs	r3, r0
 527 02c8 2370     		strb	r3, [r4]
 277:eeprom.c      **** 
 278:eeprom.c      **** 
 279:eeprom.c      ****   if( retCode == I2C_CODE_OK )
 528              		.loc 1 279 0
 529 02ca 2900     		movs	r1, r5
 530 02cc 7B18     		adds	r3, r7, r1
 531 02ce 1B78     		ldrb	r3, [r3]
 532 02d0 1B06     		lsls	r3, r3, #24
 533 02d2 1B16     		asrs	r3, r3, #24
 534 02d4 012B     		cmp	r3, #1
 535 02d6 00D0     		beq	.LCB465
 536 02d8 6BE0     		b	.L37	@long jump
 537              	.LCB465:
 280:eeprom.c      ****   {
 281:eeprom.c      ****     /* wait until address transmitted and receive data */
 282:eeprom.c      ****     for(i = 1; i <= len; i++ )
 538              		.loc 1 282 0
 539 02da 0C23     		movs	r3, #12
 540 02dc FB18     		adds	r3, r7, r3
 541 02de 0122     		movs	r2, #1
 542 02e0 1A80     		strh	r2, [r3]
 543 02e2 5FE0     		b	.L38
 544              	.L47:
 283:eeprom.c      ****     {
 284:eeprom.c      ****       /* wait until data transmitted */
 285:eeprom.c      ****       while(1)
 286:eeprom.c      ****       {
 287:eeprom.c      ****         /* Get new status */
 288:eeprom.c      ****         status = i2cCheckStatus();
 545              		.loc 1 288 0
 546 02e4 0B25     		movs	r5, #11
 547 02e6 7C19     		adds	r4, r7, r5
 548 02e8 FFF7FEFF 		bl	i2cCheckStatus
 549 02ec 0300     		movs	r3, r0
 550 02ee 2370     		strb	r3, [r4]
 289:eeprom.c      **** 
 290:eeprom.c      ****         if(( status == 0x40 ) || ( status == 0x48 ) || ( status == 0x50 ))
 551              		.loc 1 290 0
 552 02f0 7B19     		adds	r3, r7, r5
 553 02f2 1B78     		ldrb	r3, [r3]
 554 02f4 402B     		cmp	r3, #64
 555 02f6 09D0     		beq	.L39
 556              		.loc 1 290 0 is_stmt 0 discriminator 1
 557 02f8 0B23     		movs	r3, #11
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 16


 558 02fa FB18     		adds	r3, r7, r3
 559 02fc 1B78     		ldrb	r3, [r3]
 560 02fe 482B     		cmp	r3, #72
 561 0300 04D0     		beq	.L39
 562              		.loc 1 290 0 discriminator 2
 563 0302 0B23     		movs	r3, #11
 564 0304 FB18     		adds	r3, r7, r3
 565 0306 1B78     		ldrb	r3, [r3]
 566 0308 502B     		cmp	r3, #80
 567 030a 37D1     		bne	.L40
 568              	.L39:
 291:eeprom.c      ****         {
 292:eeprom.c      ****           /* Data received */
 293:eeprom.c      **** 
 294:eeprom.c      ****           if(i == len )
 569              		.loc 1 294 0 is_stmt 1
 570 030c 0C23     		movs	r3, #12
 571 030e FA18     		adds	r2, r7, r3
 572 0310 3B1D     		adds	r3, r7, #4
 573 0312 1288     		ldrh	r2, [r2]
 574 0314 1B88     		ldrh	r3, [r3]
 575 0316 9A42     		cmp	r2, r3
 576 0318 09D1     		bne	.L41
 295:eeprom.c      ****           {
 296:eeprom.c      ****             /* Set generate NACK */
 297:eeprom.c      ****             retCode = i2cGetChar( I2C_MODE_ACK1, pBuf );
 577              		.loc 1 297 0
 578 031a 0F23     		movs	r3, #15
 579 031c FC18     		adds	r4, r7, r3
 580 031e 3B68     		ldr	r3, [r7]
 581 0320 1900     		movs	r1, r3
 582 0322 0120     		movs	r0, #1
 583 0324 FFF7FEFF 		bl	i2cGetChar
 584 0328 0300     		movs	r3, r0
 585 032a 2370     		strb	r3, [r4]
 586 032c 08E0     		b	.L42
 587              	.L41:
 298:eeprom.c      ****           }
 299:eeprom.c      ****           else
 300:eeprom.c      ****           {
 301:eeprom.c      ****             retCode = i2cGetChar( I2C_MODE_ACK0, pBuf );
 588              		.loc 1 301 0
 589 032e 0F23     		movs	r3, #15
 590 0330 FC18     		adds	r4, r7, r3
 591 0332 3B68     		ldr	r3, [r7]
 592 0334 1900     		movs	r1, r3
 593 0336 0020     		movs	r0, #0
 594 0338 FFF7FEFF 		bl	i2cGetChar
 595 033c 0300     		movs	r3, r0
 596 033e 2370     		strb	r3, [r4]
 597              	.L42:
 302:eeprom.c      ****           }
 303:eeprom.c      **** 
 304:eeprom.c      ****           /* Read data */
 305:eeprom.c      ****           retCode = i2cGetChar( I2C_MODE_READ, pBuf );
 598              		.loc 1 305 0
 599 0340 0F23     		movs	r3, #15
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 17


 600 0342 FC18     		adds	r4, r7, r3
 601 0344 3B68     		ldr	r3, [r7]
 602 0346 1900     		movs	r1, r3
 603 0348 0220     		movs	r0, #2
 604 034a FFF7FEFF 		bl	i2cGetChar
 605 034e 0300     		movs	r3, r0
 606 0350 2370     		strb	r3, [r4]
 306:eeprom.c      ****           while( retCode == I2C_CODE_EMPTY )
 607              		.loc 1 306 0
 608 0352 08E0     		b	.L43
 609              	.L44:
 307:eeprom.c      ****           {
 308:eeprom.c      ****             retCode = i2cGetChar( I2C_MODE_READ, pBuf );
 610              		.loc 1 308 0
 611 0354 0F23     		movs	r3, #15
 612 0356 FC18     		adds	r4, r7, r3
 613 0358 3B68     		ldr	r3, [r7]
 614 035a 1900     		movs	r1, r3
 615 035c 0220     		movs	r0, #2
 616 035e FFF7FEFF 		bl	i2cGetChar
 617 0362 0300     		movs	r3, r0
 618 0364 2370     		strb	r3, [r4]
 619              	.L43:
 306:eeprom.c      ****           while( retCode == I2C_CODE_EMPTY )
 620              		.loc 1 306 0
 621 0366 0F23     		movs	r3, #15
 622 0368 FB18     		adds	r3, r7, r3
 623 036a 1B78     		ldrb	r3, [r3]
 624 036c 1B06     		lsls	r3, r3, #24
 625 036e 1B16     		asrs	r3, r3, #24
 626 0370 0333     		adds	r3, r3, #3
 627 0372 EFD0     		beq	.L44
 309:eeprom.c      ****           }
 310:eeprom.c      ****           pBuf++;
 628              		.loc 1 310 0
 629 0374 3B68     		ldr	r3, [r7]
 630 0376 0133     		adds	r3, r3, #1
 631 0378 3B60     		str	r3, [r7]
 311:eeprom.c      **** 
 312:eeprom.c      ****           break;
 632              		.loc 1 312 0
 633 037a 0DE0     		b	.L45
 634              	.L40:
 313:eeprom.c      ****         }
 314:eeprom.c      ****         else if( status != 0xf8 )
 635              		.loc 1 314 0
 636 037c 0B23     		movs	r3, #11
 637 037e FB18     		adds	r3, r7, r3
 638 0380 1B78     		ldrb	r3, [r3]
 639 0382 F82B     		cmp	r3, #248
 640 0384 AED0     		beq	.L47
 315:eeprom.c      ****         {
 316:eeprom.c      ****           /* ERROR */
 317:eeprom.c      ****           i = len;
 641              		.loc 1 317 0
 642 0386 0C23     		movs	r3, #12
 643 0388 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 18


 644 038a 3A1D     		adds	r2, r7, #4
 645 038c 1288     		ldrh	r2, [r2]
 646 038e 1A80     		strh	r2, [r3]
 318:eeprom.c      ****           retCode = I2C_CODE_ERROR;
 647              		.loc 1 318 0
 648 0390 0F23     		movs	r3, #15
 649 0392 FB18     		adds	r3, r7, r3
 650 0394 FF22     		movs	r2, #255
 651 0396 1A70     		strb	r2, [r3]
 652              	.L45:
 282:eeprom.c      ****     {
 653              		.loc 1 282 0 discriminator 2
 654 0398 0C21     		movs	r1, #12
 655 039a 7B18     		adds	r3, r7, r1
 656 039c 1A88     		ldrh	r2, [r3]
 657 039e 7B18     		adds	r3, r7, r1
 658 03a0 0132     		adds	r2, r2, #1
 659 03a2 1A80     		strh	r2, [r3]
 660              	.L38:
 282:eeprom.c      ****     {
 661              		.loc 1 282 0 is_stmt 0 discriminator 1
 662 03a4 0C23     		movs	r3, #12
 663 03a6 FA18     		adds	r2, r7, r3
 664 03a8 3B1D     		adds	r3, r7, #4
 665 03aa 1288     		ldrh	r2, [r2]
 666 03ac 1B88     		ldrh	r3, [r3]
 667 03ae 9A42     		cmp	r2, r3
 668 03b0 98D9     		bls	.L47
 669              	.L37:
 319:eeprom.c      ****           break;
 320:eeprom.c      ****         }
 321:eeprom.c      ****       }
 322:eeprom.c      ****     }
 323:eeprom.c      ****   }
 324:eeprom.c      **** 
 325:eeprom.c      ****   /* Generate Stop condition */
 326:eeprom.c      ****   i2cStop();
 670              		.loc 1 326 0 is_stmt 1
 671 03b2 FFF7FEFF 		bl	i2cStop
 327:eeprom.c      **** 
 328:eeprom.c      ****   return retCode;
 672              		.loc 1 328 0
 673 03b6 0F23     		movs	r3, #15
 674 03b8 FB18     		adds	r3, r7, r3
 675 03ba 1B78     		ldrb	r3, [r3]
 676 03bc 1B06     		lsls	r3, r3, #24
 677 03be 1B16     		asrs	r3, r3, #24
 329:eeprom.c      **** 
 330:eeprom.c      **** }
 678              		.loc 1 330 0
 679 03c0 1800     		movs	r0, r3
 680 03c2 BD46     		mov	sp, r7
 681 03c4 04B0     		add	sp, sp, #16
 682              		@ sp needed
 683 03c6 B0BC     		pop	{r4, r5, r7}
 684 03c8 02BC     		pop	{r1}
 685 03ca 0847     		bx	r1
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 19


 686              		.cfi_endproc
 687              	.LFE2:
 688              		.size	eepromPageRead, .-eepromPageRead
 689              		.align	1
 690              		.global	eepromWrite
 691              		.syntax unified
 692              		.code	16
 693              		.thumb_func
 694              		.fpu softvfp
 695              		.type	eepromWrite, %function
 696              	eepromWrite:
 697              	.LFB3:
 331:eeprom.c      **** 
 332:eeprom.c      **** 
 333:eeprom.c      **** tS8
 334:eeprom.c      **** eepromWrite(tU16 addr,
 335:eeprom.c      ****             tU8* pData,
 336:eeprom.c      ****             tU16 len)
 337:eeprom.c      **** {
 698              		.loc 1 337 0
 699              		.cfi_startproc
 700              		@ Function supports interworking.
 701              		@ args = 0, pretend = 0, frame = 16
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 03cc B0B5     		push	{r4, r5, r7, lr}
 704              	.LCFI9:
 705              		.cfi_def_cfa_offset 16
 706              		.cfi_offset 4, -16
 707              		.cfi_offset 5, -12
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 03ce 84B0     		sub	sp, sp, #16
 711              	.LCFI10:
 712              		.cfi_def_cfa_offset 32
 713 03d0 00AF     		add	r7, sp, #0
 714              	.LCFI11:
 715              		.cfi_def_cfa_register 7
 716 03d2 3960     		str	r1, [r7]
 717 03d4 1100     		movs	r1, r2
 718 03d6 BB1D     		adds	r3, r7, #6
 719 03d8 021C     		adds	r2, r0, #0
 720 03da 1A80     		strh	r2, [r3]
 721 03dc 3B1D     		adds	r3, r7, #4
 722 03de 0A1C     		adds	r2, r1, #0
 723 03e0 1A80     		strh	r2, [r3]
 338:eeprom.c      ****   tS8 retCode = 0;
 724              		.loc 1 338 0
 725 03e2 0F21     		movs	r1, #15
 726 03e4 7B18     		adds	r3, r7, r1
 727 03e6 0022     		movs	r2, #0
 728 03e8 1A70     		strb	r2, [r3]
 339:eeprom.c      ****   //tU8 status  = 0;
 340:eeprom.c      ****   tU8 i       = 0;
 729              		.loc 1 340 0
 730 03ea 0E23     		movs	r3, #14
 731 03ec FB18     		adds	r3, r7, r3
 732 03ee 0022     		movs	r2, #0
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 20


 733 03f0 1A70     		strb	r2, [r3]
 341:eeprom.c      **** 
 342:eeprom.c      ****   do
 343:eeprom.c      ****   {
 344:eeprom.c      **** 
 345:eeprom.c      ****     /* generate Start condition */
 346:eeprom.c      ****     retCode = i2cStart();
 734              		.loc 1 346 0
 735 03f2 0D00     		movs	r5, r1
 736 03f4 7C18     		adds	r4, r7, r1
 737 03f6 FFF7FEFF 		bl	i2cStart
 738 03fa 0300     		movs	r3, r0
 739 03fc 2370     		strb	r3, [r4]
 347:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 740              		.loc 1 347 0
 741 03fe 2900     		movs	r1, r5
 742 0400 7B18     		adds	r3, r7, r1
 743 0402 1B78     		ldrb	r3, [r3]
 744 0404 1B06     		lsls	r3, r3, #24
 745 0406 1B16     		asrs	r3, r3, #24
 746 0408 012B     		cmp	r3, #1
 747 040a 44D1     		bne	.L58
 348:eeprom.c      ****       break;
 349:eeprom.c      **** 
 350:eeprom.c      **** 
 351:eeprom.c      ****     /* write EEPROM I2C address */
 352:eeprom.c      ****     retCode = i2cWriteWithWait(I2C_EEPROM_ADDR);
 748              		.loc 1 352 0
 749 040c 0F25     		movs	r5, #15
 750 040e 7C19     		adds	r4, r7, r5
 751 0410 A020     		movs	r0, #160
 752 0412 FFF7FEFF 		bl	i2cWriteWithWait
 753 0416 0300     		movs	r3, r0
 754 0418 2370     		strb	r3, [r4]
 353:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 755              		.loc 1 353 0
 756 041a 7B19     		adds	r3, r7, r5
 757 041c 1B78     		ldrb	r3, [r3]
 758 041e 1B06     		lsls	r3, r3, #24
 759 0420 1B16     		asrs	r3, r3, #24
 760 0422 012B     		cmp	r3, #1
 761 0424 39D1     		bne	.L59
 354:eeprom.c      ****       break;
 355:eeprom.c      **** 
 356:eeprom.c      **** #if 0
 357:eeprom.c      ****     /* write offset high in EEPROM space  */
 358:eeprom.c      ****     retCode = i2cWriteWithWait( (tU8)(addr >> 8));
 359:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 360:eeprom.c      ****       break;
 361:eeprom.c      **** #endif
 362:eeprom.c      **** 
 363:eeprom.c      ****     /* write offset low in EEPROM space  */
 364:eeprom.c      ****     retCode = i2cWriteWithWait( (tU8)(addr & 0xFF));
 762              		.loc 1 364 0
 763 0426 BB1D     		adds	r3, r7, #6
 764 0428 1B88     		ldrh	r3, [r3]
 765 042a 1B06     		lsls	r3, r3, #24
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 21


 766 042c 1B0E     		lsrs	r3, r3, #24
 767 042e 0F25     		movs	r5, #15
 768 0430 7C19     		adds	r4, r7, r5
 769 0432 1800     		movs	r0, r3
 770 0434 FFF7FEFF 		bl	i2cWriteWithWait
 771 0438 0300     		movs	r3, r0
 772 043a 2370     		strb	r3, [r4]
 365:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 773              		.loc 1 365 0
 774 043c 7B19     		adds	r3, r7, r5
 775 043e 1B78     		ldrb	r3, [r3]
 776 0440 1B06     		lsls	r3, r3, #24
 777 0442 1B16     		asrs	r3, r3, #24
 778 0444 012B     		cmp	r3, #1
 779 0446 2AD1     		bne	.L60
 366:eeprom.c      ****       break;
 367:eeprom.c      **** 
 368:eeprom.c      **** 
 369:eeprom.c      ****     /* write data */
 370:eeprom.c      ****     for(i = 0; i <len; i++)
 780              		.loc 1 370 0
 781 0448 0E23     		movs	r3, #14
 782 044a FB18     		adds	r3, r7, r3
 783 044c 0022     		movs	r2, #0
 784 044e 1A70     		strb	r2, [r3]
 785 0450 17E0     		b	.L54
 786              	.L56:
 371:eeprom.c      ****     {
 372:eeprom.c      ****       retCode = i2cWriteWithWait(*pData);
 787              		.loc 1 372 0
 788 0452 3B68     		ldr	r3, [r7]
 789 0454 1B78     		ldrb	r3, [r3]
 790 0456 0F25     		movs	r5, #15
 791 0458 7C19     		adds	r4, r7, r5
 792 045a 1800     		movs	r0, r3
 793 045c FFF7FEFF 		bl	i2cWriteWithWait
 794 0460 0300     		movs	r3, r0
 795 0462 2370     		strb	r3, [r4]
 373:eeprom.c      ****       if(retCode != I2C_CODE_OK)
 796              		.loc 1 373 0
 797 0464 7B19     		adds	r3, r7, r5
 798 0466 1B78     		ldrb	r3, [r3]
 799 0468 1B06     		lsls	r3, r3, #24
 800 046a 1B16     		asrs	r3, r3, #24
 801 046c 012B     		cmp	r3, #1
 802 046e 18D1     		bne	.L61
 374:eeprom.c      ****         break;
 375:eeprom.c      **** 
 376:eeprom.c      ****       pData++;
 803              		.loc 1 376 0 discriminator 2
 804 0470 3B68     		ldr	r3, [r7]
 805 0472 0133     		adds	r3, r3, #1
 806 0474 3B60     		str	r3, [r7]
 370:eeprom.c      ****     {
 807              		.loc 1 370 0 discriminator 2
 808 0476 0E21     		movs	r1, #14
 809 0478 7B18     		adds	r3, r7, r1
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 22


 810 047a 1A78     		ldrb	r2, [r3]
 811 047c 7B18     		adds	r3, r7, r1
 812 047e 0132     		adds	r2, r2, #1
 813 0480 1A70     		strb	r2, [r3]
 814              	.L54:
 370:eeprom.c      ****     {
 815              		.loc 1 370 0 is_stmt 0 discriminator 1
 816 0482 0E23     		movs	r3, #14
 817 0484 FB18     		adds	r3, r7, r3
 818 0486 1B78     		ldrb	r3, [r3]
 819 0488 1B04     		lsls	r3, r3, #16
 820 048a 1B0C     		lsrs	r3, r3, #16
 821 048c 3A1D     		adds	r2, r7, #4
 822 048e 1288     		ldrh	r2, [r2]
 823 0490 9A42     		cmp	r2, r3
 824 0492 DED8     		bhi	.L56
 825 0494 06E0     		b	.L51
 826              	.L58:
 348:eeprom.c      **** 
 827              		.loc 1 348 0 is_stmt 1
 828 0496 C046     		nop
 829 0498 04E0     		b	.L51
 830              	.L59:
 354:eeprom.c      **** 
 831              		.loc 1 354 0
 832 049a C046     		nop
 833 049c 02E0     		b	.L51
 834              	.L60:
 366:eeprom.c      **** 
 835              		.loc 1 366 0
 836 049e C046     		nop
 837 04a0 00E0     		b	.L51
 838              	.L61:
 374:eeprom.c      **** 
 839              		.loc 1 374 0
 840 04a2 C046     		nop
 841              	.L51:
 377:eeprom.c      ****     }
 378:eeprom.c      **** 
 379:eeprom.c      ****   } while(0);
 380:eeprom.c      **** 
 381:eeprom.c      ****   /* generate Stop condition */
 382:eeprom.c      ****   i2cStop();
 842              		.loc 1 382 0
 843 04a4 FFF7FEFF 		bl	i2cStop
 383:eeprom.c      **** 
 384:eeprom.c      **** 
 385:eeprom.c      ****   return retCode;
 844              		.loc 1 385 0
 845 04a8 0F23     		movs	r3, #15
 846 04aa FB18     		adds	r3, r7, r3
 847 04ac 1B78     		ldrb	r3, [r3]
 848 04ae 1B06     		lsls	r3, r3, #24
 849 04b0 1B16     		asrs	r3, r3, #24
 386:eeprom.c      **** }
 850              		.loc 1 386 0
 851 04b2 1800     		movs	r0, r3
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 23


 852 04b4 BD46     		mov	sp, r7
 853 04b6 04B0     		add	sp, sp, #16
 854              		@ sp needed
 855 04b8 B0BC     		pop	{r4, r5, r7}
 856 04ba 02BC     		pop	{r1}
 857 04bc 0847     		bx	r1
 858              		.cfi_endproc
 859              	.LFE3:
 860              		.size	eepromWrite, .-eepromWrite
 861              		.align	1
 862              		.global	pca9532
 863              		.syntax unified
 864              		.code	16
 865              		.thumb_func
 866              		.fpu softvfp
 867              		.type	pca9532, %function
 868              	pca9532:
 869              	.LFB4:
 387:eeprom.c      **** 
 388:eeprom.c      **** /******************************************************************************
 389:eeprom.c      ****  *
 390:eeprom.c      ****  * Description:
 391:eeprom.c      ****  *    Communicate with the PCA9532
 392:eeprom.c      ****  *    First pBuf/len = bytes to write
 393:eeprom.c      ****  *    Second pBuf2/len2 = bytes to read
 394:eeprom.c      ****  *
 395:eeprom.c      ****  *****************************************************************************/
 396:eeprom.c      **** tS8 pca9532(tU8* pBuf, tU16 len, tU8* pBuf2, tU16 len2)
 397:eeprom.c      **** {
 870              		.loc 1 397 0
 871              		.cfi_startproc
 872              		@ Function supports interworking.
 873              		@ args = 0, pretend = 0, frame = 24
 874              		@ frame_needed = 1, uses_anonymous_args = 0
 875 04be B0B5     		push	{r4, r5, r7, lr}
 876              	.LCFI12:
 877              		.cfi_def_cfa_offset 16
 878              		.cfi_offset 4, -16
 879              		.cfi_offset 5, -12
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 04c0 86B0     		sub	sp, sp, #24
 883              	.LCFI13:
 884              		.cfi_def_cfa_offset 40
 885 04c2 00AF     		add	r7, sp, #0
 886              	.LCFI14:
 887              		.cfi_def_cfa_register 7
 888 04c4 F860     		str	r0, [r7, #12]
 889 04c6 0800     		movs	r0, r1
 890 04c8 7A60     		str	r2, [r7, #4]
 891 04ca 1900     		movs	r1, r3
 892 04cc 0A23     		movs	r3, #10
 893 04ce FB18     		adds	r3, r7, r3
 894 04d0 021C     		adds	r2, r0, #0
 895 04d2 1A80     		strh	r2, [r3]
 896 04d4 0823     		movs	r3, #8
 897 04d6 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 24


 898 04d8 0A1C     		adds	r2, r1, #0
 899 04da 1A80     		strh	r2, [r3]
 398:eeprom.c      ****   tS8  retCode = 0;
 900              		.loc 1 398 0
 901 04dc 1721     		movs	r1, #23
 902 04de 7B18     		adds	r3, r7, r1
 903 04e0 0022     		movs	r2, #0
 904 04e2 1A70     		strb	r2, [r3]
 399:eeprom.c      ****   tU8  status  = 0;
 905              		.loc 1 399 0
 906 04e4 1323     		movs	r3, #19
 907 04e6 FB18     		adds	r3, r7, r3
 908 04e8 0022     		movs	r2, #0
 909 04ea 1A70     		strb	r2, [r3]
 400:eeprom.c      ****   tU16 i       = 0;
 910              		.loc 1 400 0
 911 04ec 1423     		movs	r3, #20
 912 04ee FB18     		adds	r3, r7, r3
 913 04f0 0022     		movs	r2, #0
 914 04f2 1A80     		strh	r2, [r3]
 401:eeprom.c      **** 
 402:eeprom.c      ****   do
 403:eeprom.c      ****   {
 404:eeprom.c      ****     /* generate Start condition */
 405:eeprom.c      ****     retCode = i2cStart();
 915              		.loc 1 405 0
 916 04f4 0D00     		movs	r5, r1
 917 04f6 7C18     		adds	r4, r7, r1
 918 04f8 FFF7FEFF 		bl	i2cStart
 919 04fc 0300     		movs	r3, r0
 920 04fe 2370     		strb	r3, [r4]
 406:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 921              		.loc 1 406 0
 922 0500 2900     		movs	r1, r5
 923 0502 7B18     		adds	r3, r7, r1
 924 0504 1B78     		ldrb	r3, [r3]
 925 0506 1B06     		lsls	r3, r3, #24
 926 0508 1B16     		asrs	r3, r3, #24
 927 050a 012B     		cmp	r3, #1
 928 050c 32D1     		bne	.L88
 407:eeprom.c      ****       break;
 408:eeprom.c      **** 
 409:eeprom.c      **** 
 410:eeprom.c      ****     /* write pca9532 address */
 411:eeprom.c      ****     retCode = i2cWriteWithWait(0xc0);
 929              		.loc 1 411 0
 930 050e 1725     		movs	r5, #23
 931 0510 7C19     		adds	r4, r7, r5
 932 0512 C020     		movs	r0, #192
 933 0514 FFF7FEFF 		bl	i2cWriteWithWait
 934 0518 0300     		movs	r3, r0
 935 051a 2370     		strb	r3, [r4]
 412:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 936              		.loc 1 412 0
 937 051c 7B19     		adds	r3, r7, r5
 938 051e 1B78     		ldrb	r3, [r3]
 939 0520 1B06     		lsls	r3, r3, #24
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 25


 940 0522 1B16     		asrs	r3, r3, #24
 941 0524 012B     		cmp	r3, #1
 942 0526 27D1     		bne	.L89
 413:eeprom.c      ****       break;
 414:eeprom.c      **** 
 415:eeprom.c      ****     /* write data */
 416:eeprom.c      ****     for(i = 0; i <len; i++)
 943              		.loc 1 416 0
 944 0528 1423     		movs	r3, #20
 945 052a FB18     		adds	r3, r7, r3
 946 052c 0022     		movs	r2, #0
 947 052e 1A80     		strh	r2, [r3]
 948 0530 17E0     		b	.L66
 949              	.L68:
 417:eeprom.c      ****     {
 418:eeprom.c      ****       retCode = i2cWriteWithWait(*pBuf);
 950              		.loc 1 418 0
 951 0532 FB68     		ldr	r3, [r7, #12]
 952 0534 1B78     		ldrb	r3, [r3]
 953 0536 1725     		movs	r5, #23
 954 0538 7C19     		adds	r4, r7, r5
 955 053a 1800     		movs	r0, r3
 956 053c FFF7FEFF 		bl	i2cWriteWithWait
 957 0540 0300     		movs	r3, r0
 958 0542 2370     		strb	r3, [r4]
 419:eeprom.c      ****       if(retCode != I2C_CODE_OK)
 959              		.loc 1 419 0
 960 0544 7B19     		adds	r3, r7, r5
 961 0546 1B78     		ldrb	r3, [r3]
 962 0548 1B06     		lsls	r3, r3, #24
 963 054a 1B16     		asrs	r3, r3, #24
 964 054c 012B     		cmp	r3, #1
 965 054e 15D1     		bne	.L90
 420:eeprom.c      ****         break;
 421:eeprom.c      **** 
 422:eeprom.c      ****       pBuf++;
 966              		.loc 1 422 0 discriminator 2
 967 0550 FB68     		ldr	r3, [r7, #12]
 968 0552 0133     		adds	r3, r3, #1
 969 0554 FB60     		str	r3, [r7, #12]
 416:eeprom.c      ****     {
 970              		.loc 1 416 0 discriminator 2
 971 0556 1421     		movs	r1, #20
 972 0558 7B18     		adds	r3, r7, r1
 973 055a 1A88     		ldrh	r2, [r3]
 974 055c 7B18     		adds	r3, r7, r1
 975 055e 0132     		adds	r2, r2, #1
 976 0560 1A80     		strh	r2, [r3]
 977              	.L66:
 416:eeprom.c      ****     {
 978              		.loc 1 416 0 is_stmt 0 discriminator 1
 979 0562 1423     		movs	r3, #20
 980 0564 FA18     		adds	r2, r7, r3
 981 0566 0A23     		movs	r3, #10
 982 0568 FB18     		adds	r3, r7, r3
 983 056a 1288     		ldrh	r2, [r2]
 984 056c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 26


 985 056e 9A42     		cmp	r2, r3
 986 0570 DFD3     		bcc	.L68
 987 0572 04E0     		b	.L64
 988              	.L88:
 407:eeprom.c      **** 
 989              		.loc 1 407 0 is_stmt 1
 990 0574 C046     		nop
 991 0576 02E0     		b	.L64
 992              	.L89:
 413:eeprom.c      **** 
 993              		.loc 1 413 0
 994 0578 C046     		nop
 995 057a 00E0     		b	.L64
 996              	.L90:
 420:eeprom.c      **** 
 997              		.loc 1 420 0
 998 057c C046     		nop
 999              	.L64:
 423:eeprom.c      ****     }
 424:eeprom.c      **** 
 425:eeprom.c      ****   } while(0);
 426:eeprom.c      **** 
 427:eeprom.c      ****   if (len2 > 0)
 1000              		.loc 1 427 0
 1001 057e 0823     		movs	r3, #8
 1002 0580 FB18     		adds	r3, r7, r3
 1003 0582 1B88     		ldrh	r3, [r3]
 1004 0584 002B     		cmp	r3, #0
 1005 0586 00D1     		bne	.LCB906
 1006 0588 B3E0     		b	.L69	@long jump
 1007              	.LCB906:
 428:eeprom.c      ****   {
 429:eeprom.c      ****     /* Generate Start condition */
 430:eeprom.c      ****     retCode = i2cRepeatStart();
 1008              		.loc 1 430 0
 1009 058a 1725     		movs	r5, #23
 1010 058c 7C19     		adds	r4, r7, r5
 1011 058e FFF7FEFF 		bl	i2cRepeatStart
 1012 0592 0300     		movs	r3, r0
 1013 0594 2370     		strb	r3, [r4]
 431:eeprom.c      **** 
 432:eeprom.c      ****     /* Transmit device address */
 433:eeprom.c      ****     if( retCode == I2C_CODE_OK)
 1014              		.loc 1 433 0
 1015 0596 7B19     		adds	r3, r7, r5
 1016 0598 1B78     		ldrb	r3, [r3]
 1017 059a 1B06     		lsls	r3, r3, #24
 1018 059c 1B16     		asrs	r3, r3, #24
 1019 059e 012B     		cmp	r3, #1
 1020 05a0 15D1     		bne	.L76
 434:eeprom.c      ****     {
 435:eeprom.c      ****       /* Write SLA+R */
 436:eeprom.c      ****       retCode = i2cPutChar( 0xc0 + 0x01 );
 1021              		.loc 1 436 0
 1022 05a2 1723     		movs	r3, #23
 1023 05a4 FC18     		adds	r4, r7, r3
 1024 05a6 C120     		movs	r0, #193
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 27


 1025 05a8 FFF7FEFF 		bl	i2cPutChar
 1026 05ac 0300     		movs	r3, r0
 1027 05ae 2370     		strb	r3, [r4]
 437:eeprom.c      ****       while( retCode == I2C_CODE_BUSY )
 1028              		.loc 1 437 0
 1029 05b0 06E0     		b	.L71
 1030              	.L72:
 438:eeprom.c      ****       {
 439:eeprom.c      ****         retCode = i2cPutChar( 0xc0 + 0x01 );
 1031              		.loc 1 439 0
 1032 05b2 1723     		movs	r3, #23
 1033 05b4 FC18     		adds	r4, r7, r3
 1034 05b6 C120     		movs	r0, #193
 1035 05b8 FFF7FEFF 		bl	i2cPutChar
 1036 05bc 0300     		movs	r3, r0
 1037 05be 2370     		strb	r3, [r4]
 1038              	.L71:
 437:eeprom.c      ****       while( retCode == I2C_CODE_BUSY )
 1039              		.loc 1 437 0
 1040 05c0 1723     		movs	r3, #23
 1041 05c2 FB18     		adds	r3, r7, r3
 1042 05c4 1B78     		ldrb	r3, [r3]
 1043 05c6 1B06     		lsls	r3, r3, #24
 1044 05c8 1B16     		asrs	r3, r3, #24
 1045 05ca 0433     		adds	r3, r3, #4
 1046 05cc F1D0     		beq	.L72
 1047              	.L76:
 440:eeprom.c      ****       }
 441:eeprom.c      ****     }
 442:eeprom.c      **** 
 443:eeprom.c      ****     /* Wait until SLA+R transmitted */
 444:eeprom.c      ****     while(1)
 445:eeprom.c      ****     {
 446:eeprom.c      ****       /* Get new status */
 447:eeprom.c      ****       status = i2cCheckStatus();
 1048              		.loc 1 447 0
 1049 05ce 1325     		movs	r5, #19
 1050 05d0 7C19     		adds	r4, r7, r5
 1051 05d2 FFF7FEFF 		bl	i2cCheckStatus
 1052 05d6 0300     		movs	r3, r0
 1053 05d8 2370     		strb	r3, [r4]
 448:eeprom.c      **** 
 449:eeprom.c      ****       if(status == 0x40)
 1054              		.loc 1 449 0
 1055 05da 7B19     		adds	r3, r7, r5
 1056 05dc 1B78     		ldrb	r3, [r3]
 1057 05de 402B     		cmp	r3, #64
 1058 05e0 0FD0     		beq	.L91
 450:eeprom.c      ****       {
 451:eeprom.c      ****         /* Data transmitted and ACK received */
 452:eeprom.c      ****         break;
 453:eeprom.c      ****       }
 454:eeprom.c      ****       else if(status != 0xf8)
 1059              		.loc 1 454 0
 1060 05e2 1323     		movs	r3, #19
 1061 05e4 FB18     		adds	r3, r7, r3
 1062 05e6 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 28


 1063 05e8 F82B     		cmp	r3, #248
 1064 05ea 04D0     		beq	.L75
 455:eeprom.c      ****       {
 456:eeprom.c      ****         /* error */
 457:eeprom.c      ****         retCode = I2C_CODE_ERROR;
 1065              		.loc 1 457 0
 1066 05ec 1723     		movs	r3, #23
 1067 05ee FB18     		adds	r3, r7, r3
 1068 05f0 FF22     		movs	r2, #255
 1069 05f2 1A70     		strb	r2, [r3]
 458:eeprom.c      ****         break;
 1070              		.loc 1 458 0
 1071 05f4 06E0     		b	.L74
 1072              	.L75:
 1073 05f6 1722     		movs	r2, #23
 1074 05f8 BB18     		adds	r3, r7, r2
 1075 05fa BA18     		adds	r2, r7, r2
 1076 05fc 1278     		ldrb	r2, [r2]
 1077 05fe 1A70     		strb	r2, [r3]
 447:eeprom.c      **** 
 1078              		.loc 1 447 0
 1079 0600 E5E7     		b	.L76
 1080              	.L91:
 452:eeprom.c      ****       }
 1081              		.loc 1 452 0
 1082 0602 C046     		nop
 1083              	.L74:
 459:eeprom.c      ****       }
 460:eeprom.c      ****     }
 461:eeprom.c      **** 
 462:eeprom.c      ****     if( retCode == I2C_CODE_OK )
 1084              		.loc 1 462 0
 1085 0604 1723     		movs	r3, #23
 1086 0606 FB18     		adds	r3, r7, r3
 1087 0608 1B78     		ldrb	r3, [r3]
 1088 060a 1B06     		lsls	r3, r3, #24
 1089 060c 1B16     		asrs	r3, r3, #24
 1090 060e 012B     		cmp	r3, #1
 1091 0610 00D0     		beq	.LCB987
 1092 0612 6EE0     		b	.L69	@long jump
 1093              	.LCB987:
 463:eeprom.c      ****     {
 464:eeprom.c      ****       /* wait until address transmitted and receive data */
 465:eeprom.c      ****       for(i = 1; i <= len2; i++ )
 1094              		.loc 1 465 0
 1095 0614 1423     		movs	r3, #20
 1096 0616 FB18     		adds	r3, r7, r3
 1097 0618 0122     		movs	r2, #1
 1098 061a 1A80     		strh	r2, [r3]
 1099 061c 61E0     		b	.L77
 1100              	.L86:
 466:eeprom.c      ****       {
 467:eeprom.c      ****         /* wait until data transmitted */
 468:eeprom.c      ****         while(1)
 469:eeprom.c      ****         {
 470:eeprom.c      ****           /* Get new status */
 471:eeprom.c      ****           status = i2cCheckStatus();
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 29


 1101              		.loc 1 471 0
 1102 061e 1325     		movs	r5, #19
 1103 0620 7C19     		adds	r4, r7, r5
 1104 0622 FFF7FEFF 		bl	i2cCheckStatus
 1105 0626 0300     		movs	r3, r0
 1106 0628 2370     		strb	r3, [r4]
 472:eeprom.c      **** 
 473:eeprom.c      ****           if(( status == 0x40 ) || ( status == 0x48 ) || ( status == 0x50 ))
 1107              		.loc 1 473 0
 1108 062a 7B19     		adds	r3, r7, r5
 1109 062c 1B78     		ldrb	r3, [r3]
 1110 062e 402B     		cmp	r3, #64
 1111 0630 09D0     		beq	.L78
 1112              		.loc 1 473 0 is_stmt 0 discriminator 1
 1113 0632 1323     		movs	r3, #19
 1114 0634 FB18     		adds	r3, r7, r3
 1115 0636 1B78     		ldrb	r3, [r3]
 1116 0638 482B     		cmp	r3, #72
 1117 063a 04D0     		beq	.L78
 1118              		.loc 1 473 0 discriminator 2
 1119 063c 1323     		movs	r3, #19
 1120 063e FB18     		adds	r3, r7, r3
 1121 0640 1B78     		ldrb	r3, [r3]
 1122 0642 502B     		cmp	r3, #80
 1123 0644 38D1     		bne	.L79
 1124              	.L78:
 474:eeprom.c      ****           {
 475:eeprom.c      ****             /* Data received */
 476:eeprom.c      **** 
 477:eeprom.c      ****             if(i == len2 )
 1125              		.loc 1 477 0 is_stmt 1
 1126 0646 1423     		movs	r3, #20
 1127 0648 FA18     		adds	r2, r7, r3
 1128 064a 0823     		movs	r3, #8
 1129 064c FB18     		adds	r3, r7, r3
 1130 064e 1288     		ldrh	r2, [r2]
 1131 0650 1B88     		ldrh	r3, [r3]
 1132 0652 9A42     		cmp	r2, r3
 1133 0654 09D1     		bne	.L80
 478:eeprom.c      ****             {
 479:eeprom.c      ****               /* Set generate NACK */
 480:eeprom.c      ****               retCode = i2cGetChar( I2C_MODE_ACK1, pBuf2 );
 1134              		.loc 1 480 0
 1135 0656 1723     		movs	r3, #23
 1136 0658 FC18     		adds	r4, r7, r3
 1137 065a 7B68     		ldr	r3, [r7, #4]
 1138 065c 1900     		movs	r1, r3
 1139 065e 0120     		movs	r0, #1
 1140 0660 FFF7FEFF 		bl	i2cGetChar
 1141 0664 0300     		movs	r3, r0
 1142 0666 2370     		strb	r3, [r4]
 1143 0668 08E0     		b	.L81
 1144              	.L80:
 481:eeprom.c      ****             }
 482:eeprom.c      ****             else
 483:eeprom.c      ****             {
 484:eeprom.c      ****               retCode = i2cGetChar( I2C_MODE_ACK0, pBuf2 );
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 30


 1145              		.loc 1 484 0
 1146 066a 1723     		movs	r3, #23
 1147 066c FC18     		adds	r4, r7, r3
 1148 066e 7B68     		ldr	r3, [r7, #4]
 1149 0670 1900     		movs	r1, r3
 1150 0672 0020     		movs	r0, #0
 1151 0674 FFF7FEFF 		bl	i2cGetChar
 1152 0678 0300     		movs	r3, r0
 1153 067a 2370     		strb	r3, [r4]
 1154              	.L81:
 485:eeprom.c      ****             }
 486:eeprom.c      **** 
 487:eeprom.c      ****             /* Read data */
 488:eeprom.c      ****             retCode = i2cGetChar( I2C_MODE_READ, pBuf2 );
 1155              		.loc 1 488 0
 1156 067c 1723     		movs	r3, #23
 1157 067e FC18     		adds	r4, r7, r3
 1158 0680 7B68     		ldr	r3, [r7, #4]
 1159 0682 1900     		movs	r1, r3
 1160 0684 0220     		movs	r0, #2
 1161 0686 FFF7FEFF 		bl	i2cGetChar
 1162 068a 0300     		movs	r3, r0
 1163 068c 2370     		strb	r3, [r4]
 489:eeprom.c      ****             while( retCode == I2C_CODE_EMPTY )
 1164              		.loc 1 489 0
 1165 068e 08E0     		b	.L82
 1166              	.L83:
 490:eeprom.c      ****             {
 491:eeprom.c      ****               retCode = i2cGetChar( I2C_MODE_READ, pBuf2 );
 1167              		.loc 1 491 0
 1168 0690 1723     		movs	r3, #23
 1169 0692 FC18     		adds	r4, r7, r3
 1170 0694 7B68     		ldr	r3, [r7, #4]
 1171 0696 1900     		movs	r1, r3
 1172 0698 0220     		movs	r0, #2
 1173 069a FFF7FEFF 		bl	i2cGetChar
 1174 069e 0300     		movs	r3, r0
 1175 06a0 2370     		strb	r3, [r4]
 1176              	.L82:
 489:eeprom.c      ****             while( retCode == I2C_CODE_EMPTY )
 1177              		.loc 1 489 0
 1178 06a2 1723     		movs	r3, #23
 1179 06a4 FB18     		adds	r3, r7, r3
 1180 06a6 1B78     		ldrb	r3, [r3]
 1181 06a8 1B06     		lsls	r3, r3, #24
 1182 06aa 1B16     		asrs	r3, r3, #24
 1183 06ac 0333     		adds	r3, r3, #3
 1184 06ae EFD0     		beq	.L83
 492:eeprom.c      ****             }
 493:eeprom.c      ****             pBuf2++;
 1185              		.loc 1 493 0
 1186 06b0 7B68     		ldr	r3, [r7, #4]
 1187 06b2 0133     		adds	r3, r3, #1
 1188 06b4 7B60     		str	r3, [r7, #4]
 494:eeprom.c      **** 
 495:eeprom.c      ****             break;
 1189              		.loc 1 495 0
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 31


 1190 06b6 0EE0     		b	.L84
 1191              	.L79:
 496:eeprom.c      ****           }
 497:eeprom.c      ****           else if( status != 0xf8 )
 1192              		.loc 1 497 0
 1193 06b8 1323     		movs	r3, #19
 1194 06ba FB18     		adds	r3, r7, r3
 1195 06bc 1B78     		ldrb	r3, [r3]
 1196 06be F82B     		cmp	r3, #248
 1197 06c0 ADD0     		beq	.L86
 498:eeprom.c      ****           {
 499:eeprom.c      ****             /* ERROR */
 500:eeprom.c      ****             i = len2;
 1198              		.loc 1 500 0
 1199 06c2 1423     		movs	r3, #20
 1200 06c4 FB18     		adds	r3, r7, r3
 1201 06c6 0822     		movs	r2, #8
 1202 06c8 BA18     		adds	r2, r7, r2
 1203 06ca 1288     		ldrh	r2, [r2]
 1204 06cc 1A80     		strh	r2, [r3]
 501:eeprom.c      ****             retCode = I2C_CODE_ERROR;
 1205              		.loc 1 501 0
 1206 06ce 1723     		movs	r3, #23
 1207 06d0 FB18     		adds	r3, r7, r3
 1208 06d2 FF22     		movs	r2, #255
 1209 06d4 1A70     		strb	r2, [r3]
 1210              	.L84:
 465:eeprom.c      ****       {
 1211              		.loc 1 465 0 discriminator 2
 1212 06d6 1421     		movs	r1, #20
 1213 06d8 7B18     		adds	r3, r7, r1
 1214 06da 1A88     		ldrh	r2, [r3]
 1215 06dc 7B18     		adds	r3, r7, r1
 1216 06de 0132     		adds	r2, r2, #1
 1217 06e0 1A80     		strh	r2, [r3]
 1218              	.L77:
 465:eeprom.c      ****       {
 1219              		.loc 1 465 0 is_stmt 0 discriminator 1
 1220 06e2 1423     		movs	r3, #20
 1221 06e4 FA18     		adds	r2, r7, r3
 1222 06e6 0823     		movs	r3, #8
 1223 06e8 FB18     		adds	r3, r7, r3
 1224 06ea 1288     		ldrh	r2, [r2]
 1225 06ec 1B88     		ldrh	r3, [r3]
 1226 06ee 9A42     		cmp	r2, r3
 1227 06f0 95D9     		bls	.L86
 1228              	.L69:
 502:eeprom.c      ****             break;
 503:eeprom.c      ****           }
 504:eeprom.c      ****         }
 505:eeprom.c      ****       }
 506:eeprom.c      ****     }
 507:eeprom.c      ****   }
 508:eeprom.c      **** 
 509:eeprom.c      ****   /* Generate Stop condition */
 510:eeprom.c      ****   i2cStop();
 1229              		.loc 1 510 0 is_stmt 1
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 32


 1230 06f2 FFF7FEFF 		bl	i2cStop
 511:eeprom.c      **** 
 512:eeprom.c      ****   return retCode;
 1231              		.loc 1 512 0
 1232 06f6 1723     		movs	r3, #23
 1233 06f8 FB18     		adds	r3, r7, r3
 1234 06fa 1B78     		ldrb	r3, [r3]
 1235 06fc 1B06     		lsls	r3, r3, #24
 1236 06fe 1B16     		asrs	r3, r3, #24
 513:eeprom.c      **** 
 514:eeprom.c      **** }
 1237              		.loc 1 514 0
 1238 0700 1800     		movs	r0, r3
 1239 0702 BD46     		mov	sp, r7
 1240 0704 06B0     		add	sp, sp, #24
 1241              		@ sp needed
 1242 0706 B0BC     		pop	{r4, r5, r7}
 1243 0708 02BC     		pop	{r1}
 1244 070a 0847     		bx	r1
 1245              		.cfi_endproc
 1246              	.LFE4:
 1247              		.size	pca9532, .-pca9532
 1248              	.Letext0:
 1249              		.file 2 "general.h"
 1250              		.section	.debug_info,"",%progbits
 1251              	.Ldebug_info0:
 1252 0000 AA020000 		.4byte	0x2aa
 1253 0004 0200     		.2byte	0x2
 1254 0006 00000000 		.4byte	.Ldebug_abbrev0
 1255 000a 04       		.byte	0x4
 1256 000b 01       		.uleb128 0x1
 1257 000c 99000000 		.4byte	.LASF25
 1258 0010 0C       		.byte	0xc
 1259 0011 8F010000 		.4byte	.LASF26
 1260 0015 38010000 		.4byte	.LASF27
 1261 0019 00000000 		.4byte	.Ltext0
 1262 001d 0C070000 		.4byte	.Letext0
 1263 0021 00000000 		.4byte	.Ldebug_line0
 1264 0025 02       		.uleb128 0x2
 1265 0026 74553800 		.ascii	"tU8\000"
 1266 002a 02       		.byte	0x2
 1267 002b 16       		.byte	0x16
 1268 002c 30000000 		.4byte	0x30
 1269 0030 03       		.uleb128 0x3
 1270 0031 01       		.byte	0x1
 1271 0032 08       		.byte	0x8
 1272 0033 80000000 		.4byte	.LASF1
 1273 0037 04       		.uleb128 0x4
 1274 0038 7A010000 		.4byte	.LASF0
 1275 003c 02       		.byte	0x2
 1276 003d 17       		.byte	0x17
 1277 003e 42000000 		.4byte	0x42
 1278 0042 03       		.uleb128 0x3
 1279 0043 02       		.byte	0x2
 1280 0044 07       		.byte	0x7
 1281 0045 56010000 		.4byte	.LASF2
 1282 0049 03       		.uleb128 0x3
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 33


 1283 004a 04       		.byte	0x4
 1284 004b 07       		.byte	0x7
 1285 004c 16000000 		.4byte	.LASF3
 1286 0050 03       		.uleb128 0x3
 1287 0051 08       		.byte	0x8
 1288 0052 07       		.byte	0x7
 1289 0053 57000000 		.4byte	.LASF4
 1290 0057 02       		.uleb128 0x2
 1291 0058 74533800 		.ascii	"tS8\000"
 1292 005c 02       		.byte	0x2
 1293 005d 1A       		.byte	0x1a
 1294 005e 62000000 		.4byte	0x62
 1295 0062 03       		.uleb128 0x3
 1296 0063 01       		.byte	0x1
 1297 0064 06       		.byte	0x6
 1298 0065 69010000 		.4byte	.LASF5
 1299 0069 03       		.uleb128 0x3
 1300 006a 02       		.byte	0x2
 1301 006b 05       		.byte	0x5
 1302 006c 85010000 		.4byte	.LASF6
 1303 0070 05       		.uleb128 0x5
 1304 0071 04       		.byte	0x4
 1305 0072 05       		.byte	0x5
 1306 0073 696E7400 		.ascii	"int\000"
 1307 0077 03       		.uleb128 0x3
 1308 0078 08       		.byte	0x8
 1309 0079 05       		.byte	0x5
 1310 007a 00000000 		.4byte	.LASF7
 1311 007e 06       		.uleb128 0x6
 1312 007f 07       		.byte	0x7
 1313 0080 01       		.byte	0x1
 1314 0081 30000000 		.4byte	0x30
 1315 0085 02       		.byte	0x2
 1316 0086 1E       		.byte	0x1e
 1317 0087 98000000 		.4byte	0x98
 1318 008b 07       		.uleb128 0x7
 1319 008c 42000000 		.4byte	.LASF8
 1320 0090 00       		.byte	0
 1321 0091 07       		.uleb128 0x7
 1322 0092 8E000000 		.4byte	.LASF9
 1323 0096 01       		.byte	0x1
 1324 0097 00       		.byte	0
 1325 0098 04       		.uleb128 0x4
 1326 0099 7F010000 		.4byte	.LASF10
 1327 009d 02       		.byte	0x2
 1328 009e 1F       		.byte	0x1f
 1329 009f 7E000000 		.4byte	0x7e
 1330 00a3 08       		.uleb128 0x8
 1331 00a4 01       		.byte	0x1
 1332 00a5 0E000000 		.4byte	.LASF16
 1333 00a9 01       		.byte	0x1
 1334 00aa 8C01     		.2byte	0x18c
 1335 00ac 01       		.byte	0x1
 1336 00ad 57000000 		.4byte	0x57
 1337 00b1 BE040000 		.4byte	.LFB4
 1338 00b5 0C070000 		.4byte	.LFE4
 1339 00b9 00000000 		.4byte	.LLST4
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 34


 1340 00bd 01       		.byte	0x1
 1341 00be 2A010000 		.4byte	0x12a
 1342 00c2 09       		.uleb128 0x9
 1343 00c3 7B000000 		.4byte	.LASF11
 1344 00c7 01       		.byte	0x1
 1345 00c8 8C01     		.2byte	0x18c
 1346 00ca 2A010000 		.4byte	0x12a
 1347 00ce 02       		.byte	0x2
 1348 00cf 91       		.byte	0x91
 1349 00d0 64       		.sleb128 -28
 1350 00d1 0A       		.uleb128 0xa
 1351 00d2 6C656E00 		.ascii	"len\000"
 1352 00d6 01       		.byte	0x1
 1353 00d7 8C01     		.2byte	0x18c
 1354 00d9 37000000 		.4byte	0x37
 1355 00dd 02       		.byte	0x2
 1356 00de 91       		.byte	0x91
 1357 00df 62       		.sleb128 -30
 1358 00e0 09       		.uleb128 0x9
 1359 00e1 93000000 		.4byte	.LASF12
 1360 00e5 01       		.byte	0x1
 1361 00e6 8C01     		.2byte	0x18c
 1362 00e8 2A010000 		.4byte	0x12a
 1363 00ec 02       		.byte	0x2
 1364 00ed 91       		.byte	0x91
 1365 00ee 5C       		.sleb128 -36
 1366 00ef 09       		.uleb128 0x9
 1367 00f0 75010000 		.4byte	.LASF13
 1368 00f4 01       		.byte	0x1
 1369 00f5 8C01     		.2byte	0x18c
 1370 00f7 37000000 		.4byte	0x37
 1371 00fb 02       		.byte	0x2
 1372 00fc 91       		.byte	0x91
 1373 00fd 60       		.sleb128 -32
 1374 00fe 0B       		.uleb128 0xb
 1375 00ff 3A000000 		.4byte	.LASF14
 1376 0103 01       		.byte	0x1
 1377 0104 8E01     		.2byte	0x18e
 1378 0106 57000000 		.4byte	0x57
 1379 010a 02       		.byte	0x2
 1380 010b 91       		.byte	0x91
 1381 010c 6F       		.sleb128 -17
 1382 010d 0B       		.uleb128 0xb
 1383 010e 48000000 		.4byte	.LASF15
 1384 0112 01       		.byte	0x1
 1385 0113 8F01     		.2byte	0x18f
 1386 0115 25000000 		.4byte	0x25
 1387 0119 02       		.byte	0x2
 1388 011a 91       		.byte	0x91
 1389 011b 6B       		.sleb128 -21
 1390 011c 0C       		.uleb128 0xc
 1391 011d 6900     		.ascii	"i\000"
 1392 011f 01       		.byte	0x1
 1393 0120 9001     		.2byte	0x190
 1394 0122 37000000 		.4byte	0x37
 1395 0126 02       		.byte	0x2
 1396 0127 91       		.byte	0x91
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 35


 1397 0128 6C       		.sleb128 -20
 1398 0129 00       		.byte	0
 1399 012a 0D       		.uleb128 0xd
 1400 012b 04       		.byte	0x4
 1401 012c 25000000 		.4byte	0x25
 1402 0130 08       		.uleb128 0x8
 1403 0131 01       		.byte	0x1
 1404 0132 23000000 		.4byte	.LASF17
 1405 0136 01       		.byte	0x1
 1406 0137 4E01     		.2byte	0x14e
 1407 0139 01       		.byte	0x1
 1408 013a 57000000 		.4byte	0x57
 1409 013e CC030000 		.4byte	.LFB3
 1410 0142 BE040000 		.4byte	.LFE3
 1411 0146 38000000 		.4byte	.LLST3
 1412 014a 01       		.byte	0x1
 1413 014b 99010000 		.4byte	0x199
 1414 014f 09       		.uleb128 0x9
 1415 0150 76000000 		.4byte	.LASF18
 1416 0154 01       		.byte	0x1
 1417 0155 4E01     		.2byte	0x14e
 1418 0157 37000000 		.4byte	0x37
 1419 015b 02       		.byte	0x2
 1420 015c 91       		.byte	0x91
 1421 015d 66       		.sleb128 -26
 1422 015e 09       		.uleb128 0x9
 1423 015f 98010000 		.4byte	.LASF19
 1424 0163 01       		.byte	0x1
 1425 0164 4F01     		.2byte	0x14f
 1426 0166 2A010000 		.4byte	0x12a
 1427 016a 02       		.byte	0x2
 1428 016b 91       		.byte	0x91
 1429 016c 60       		.sleb128 -32
 1430 016d 0A       		.uleb128 0xa
 1431 016e 6C656E00 		.ascii	"len\000"
 1432 0172 01       		.byte	0x1
 1433 0173 5001     		.2byte	0x150
 1434 0175 37000000 		.4byte	0x37
 1435 0179 02       		.byte	0x2
 1436 017a 91       		.byte	0x91
 1437 017b 64       		.sleb128 -28
 1438 017c 0B       		.uleb128 0xb
 1439 017d 3A000000 		.4byte	.LASF14
 1440 0181 01       		.byte	0x1
 1441 0182 5201     		.2byte	0x152
 1442 0184 57000000 		.4byte	0x57
 1443 0188 02       		.byte	0x2
 1444 0189 91       		.byte	0x91
 1445 018a 6F       		.sleb128 -17
 1446 018b 0C       		.uleb128 0xc
 1447 018c 6900     		.ascii	"i\000"
 1448 018e 01       		.byte	0x1
 1449 018f 5401     		.2byte	0x154
 1450 0191 25000000 		.4byte	0x25
 1451 0195 02       		.byte	0x2
 1452 0196 91       		.byte	0x91
 1453 0197 6E       		.sleb128 -18
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 36


 1454 0198 00       		.byte	0
 1455 0199 08       		.uleb128 0x8
 1456 019a 01       		.byte	0x1
 1457 019b 29010000 		.4byte	.LASF20
 1458 019f 01       		.byte	0x1
 1459 01a0 0B01     		.2byte	0x10b
 1460 01a2 01       		.byte	0x1
 1461 01a3 57000000 		.4byte	0x57
 1462 01a7 88020000 		.4byte	.LFB2
 1463 01ab CC030000 		.4byte	.LFE2
 1464 01af 70000000 		.4byte	.LLST2
 1465 01b3 01       		.byte	0x1
 1466 01b4 11020000 		.4byte	0x211
 1467 01b8 09       		.uleb128 0x9
 1468 01b9 4F000000 		.4byte	.LASF21
 1469 01bd 01       		.byte	0x1
 1470 01be 0B01     		.2byte	0x10b
 1471 01c0 37000000 		.4byte	0x37
 1472 01c4 02       		.byte	0x2
 1473 01c5 91       		.byte	0x91
 1474 01c6 66       		.sleb128 -26
 1475 01c7 09       		.uleb128 0x9
 1476 01c8 7B000000 		.4byte	.LASF11
 1477 01cc 01       		.byte	0x1
 1478 01cd 0C01     		.2byte	0x10c
 1479 01cf 2A010000 		.4byte	0x12a
 1480 01d3 02       		.byte	0x2
 1481 01d4 91       		.byte	0x91
 1482 01d5 60       		.sleb128 -32
 1483 01d6 0A       		.uleb128 0xa
 1484 01d7 6C656E00 		.ascii	"len\000"
 1485 01db 01       		.byte	0x1
 1486 01dc 0D01     		.2byte	0x10d
 1487 01de 37000000 		.4byte	0x37
 1488 01e2 02       		.byte	0x2
 1489 01e3 91       		.byte	0x91
 1490 01e4 64       		.sleb128 -28
 1491 01e5 0B       		.uleb128 0xb
 1492 01e6 3A000000 		.4byte	.LASF14
 1493 01ea 01       		.byte	0x1
 1494 01eb 0F01     		.2byte	0x10f
 1495 01ed 57000000 		.4byte	0x57
 1496 01f1 02       		.byte	0x2
 1497 01f2 91       		.byte	0x91
 1498 01f3 6F       		.sleb128 -17
 1499 01f4 0B       		.uleb128 0xb
 1500 01f5 48000000 		.4byte	.LASF15
 1501 01f9 01       		.byte	0x1
 1502 01fa 1001     		.2byte	0x110
 1503 01fc 25000000 		.4byte	0x25
 1504 0200 02       		.byte	0x2
 1505 0201 91       		.byte	0x91
 1506 0202 6B       		.sleb128 -21
 1507 0203 0C       		.uleb128 0xc
 1508 0204 6900     		.ascii	"i\000"
 1509 0206 01       		.byte	0x1
 1510 0207 1101     		.2byte	0x111
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 37


 1511 0209 37000000 		.4byte	0x37
 1512 020d 02       		.byte	0x2
 1513 020e 91       		.byte	0x91
 1514 020f 6C       		.sleb128 -20
 1515 0210 00       		.byte	0
 1516 0211 0E       		.uleb128 0xe
 1517 0212 01       		.byte	0x1
 1518 0213 19010000 		.4byte	.LASF22
 1519 0217 01       		.byte	0x1
 1520 0218 6C       		.byte	0x6c
 1521 0219 01       		.byte	0x1
 1522 021a 57000000 		.4byte	0x57
 1523 021e C0000000 		.4byte	.LFB1
 1524 0222 88020000 		.4byte	.LFE1
 1525 0226 A8000000 		.4byte	.LLST1
 1526 022a 01       		.byte	0x1
 1527 022b 68020000 		.4byte	0x268
 1528 022f 0F       		.uleb128 0xf
 1529 0230 6E000000 		.4byte	.LASF23
 1530 0234 01       		.byte	0x1
 1531 0235 6C       		.byte	0x6c
 1532 0236 25000000 		.4byte	0x25
 1533 023a 02       		.byte	0x2
 1534 023b 91       		.byte	0x91
 1535 023c 67       		.sleb128 -25
 1536 023d 0F       		.uleb128 0xf
 1537 023e 4F000000 		.4byte	.LASF21
 1538 0242 01       		.byte	0x1
 1539 0243 6D       		.byte	0x6d
 1540 0244 37000000 		.4byte	0x37
 1541 0248 02       		.byte	0x2
 1542 0249 91       		.byte	0x91
 1543 024a 64       		.sleb128 -28
 1544 024b 10       		.uleb128 0x10
 1545 024c 3A000000 		.4byte	.LASF14
 1546 0250 01       		.byte	0x1
 1547 0251 6F       		.byte	0x6f
 1548 0252 57000000 		.4byte	0x57
 1549 0256 02       		.byte	0x2
 1550 0257 91       		.byte	0x91
 1551 0258 6F       		.sleb128 -17
 1552 0259 10       		.uleb128 0x10
 1553 025a 48000000 		.4byte	.LASF15
 1554 025e 01       		.byte	0x1
 1555 025f 70       		.byte	0x70
 1556 0260 25000000 		.4byte	0x25
 1557 0264 02       		.byte	0x2
 1558 0265 91       		.byte	0x91
 1559 0266 6E       		.sleb128 -18
 1560 0267 00       		.byte	0
 1561 0268 11       		.uleb128 0x11
 1562 0269 01       		.byte	0x1
 1563 026a 2F000000 		.4byte	.LASF28
 1564 026e 01       		.byte	0x1
 1565 026f 25       		.byte	0x25
 1566 0270 01       		.byte	0x1
 1567 0271 57000000 		.4byte	0x57
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 38


 1568 0275 00000000 		.4byte	.LFB0
 1569 0279 C0000000 		.4byte	.LFE0
 1570 027d E0000000 		.4byte	.LLST0
 1571 0281 01       		.byte	0x1
 1572 0282 10       		.uleb128 0x10
 1573 0283 3A000000 		.4byte	.LASF14
 1574 0287 01       		.byte	0x1
 1575 0288 27       		.byte	0x27
 1576 0289 57000000 		.4byte	0x57
 1577 028d 02       		.byte	0x2
 1578 028e 91       		.byte	0x91
 1579 028f 6F       		.sleb128 -17
 1580 0290 10       		.uleb128 0x10
 1581 0291 48000000 		.4byte	.LASF15
 1582 0295 01       		.byte	0x1
 1583 0296 28       		.byte	0x28
 1584 0297 25000000 		.4byte	0x25
 1585 029b 02       		.byte	0x2
 1586 029c 91       		.byte	0x91
 1587 029d 6D       		.sleb128 -19
 1588 029e 10       		.uleb128 0x10
 1589 029f 9E010000 		.4byte	.LASF24
 1590 02a3 01       		.byte	0x1
 1591 02a4 29       		.byte	0x29
 1592 02a5 98000000 		.4byte	0x98
 1593 02a9 02       		.byte	0x2
 1594 02aa 91       		.byte	0x91
 1595 02ab 6E       		.sleb128 -18
 1596 02ac 00       		.byte	0
 1597 02ad 00       		.byte	0
 1598              		.section	.debug_abbrev,"",%progbits
 1599              	.Ldebug_abbrev0:
 1600 0000 01       		.uleb128 0x1
 1601 0001 11       		.uleb128 0x11
 1602 0002 01       		.byte	0x1
 1603 0003 25       		.uleb128 0x25
 1604 0004 0E       		.uleb128 0xe
 1605 0005 13       		.uleb128 0x13
 1606 0006 0B       		.uleb128 0xb
 1607 0007 03       		.uleb128 0x3
 1608 0008 0E       		.uleb128 0xe
 1609 0009 1B       		.uleb128 0x1b
 1610 000a 0E       		.uleb128 0xe
 1611 000b 11       		.uleb128 0x11
 1612 000c 01       		.uleb128 0x1
 1613 000d 12       		.uleb128 0x12
 1614 000e 01       		.uleb128 0x1
 1615 000f 10       		.uleb128 0x10
 1616 0010 06       		.uleb128 0x6
 1617 0011 00       		.byte	0
 1618 0012 00       		.byte	0
 1619 0013 02       		.uleb128 0x2
 1620 0014 16       		.uleb128 0x16
 1621 0015 00       		.byte	0
 1622 0016 03       		.uleb128 0x3
 1623 0017 08       		.uleb128 0x8
 1624 0018 3A       		.uleb128 0x3a
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 39


 1625 0019 0B       		.uleb128 0xb
 1626 001a 3B       		.uleb128 0x3b
 1627 001b 0B       		.uleb128 0xb
 1628 001c 49       		.uleb128 0x49
 1629 001d 13       		.uleb128 0x13
 1630 001e 00       		.byte	0
 1631 001f 00       		.byte	0
 1632 0020 03       		.uleb128 0x3
 1633 0021 24       		.uleb128 0x24
 1634 0022 00       		.byte	0
 1635 0023 0B       		.uleb128 0xb
 1636 0024 0B       		.uleb128 0xb
 1637 0025 3E       		.uleb128 0x3e
 1638 0026 0B       		.uleb128 0xb
 1639 0027 03       		.uleb128 0x3
 1640 0028 0E       		.uleb128 0xe
 1641 0029 00       		.byte	0
 1642 002a 00       		.byte	0
 1643 002b 04       		.uleb128 0x4
 1644 002c 16       		.uleb128 0x16
 1645 002d 00       		.byte	0
 1646 002e 03       		.uleb128 0x3
 1647 002f 0E       		.uleb128 0xe
 1648 0030 3A       		.uleb128 0x3a
 1649 0031 0B       		.uleb128 0xb
 1650 0032 3B       		.uleb128 0x3b
 1651 0033 0B       		.uleb128 0xb
 1652 0034 49       		.uleb128 0x49
 1653 0035 13       		.uleb128 0x13
 1654 0036 00       		.byte	0
 1655 0037 00       		.byte	0
 1656 0038 05       		.uleb128 0x5
 1657 0039 24       		.uleb128 0x24
 1658 003a 00       		.byte	0
 1659 003b 0B       		.uleb128 0xb
 1660 003c 0B       		.uleb128 0xb
 1661 003d 3E       		.uleb128 0x3e
 1662 003e 0B       		.uleb128 0xb
 1663 003f 03       		.uleb128 0x3
 1664 0040 08       		.uleb128 0x8
 1665 0041 00       		.byte	0
 1666 0042 00       		.byte	0
 1667 0043 06       		.uleb128 0x6
 1668 0044 04       		.uleb128 0x4
 1669 0045 01       		.byte	0x1
 1670 0046 3E       		.uleb128 0x3e
 1671 0047 0B       		.uleb128 0xb
 1672 0048 0B       		.uleb128 0xb
 1673 0049 0B       		.uleb128 0xb
 1674 004a 49       		.uleb128 0x49
 1675 004b 13       		.uleb128 0x13
 1676 004c 3A       		.uleb128 0x3a
 1677 004d 0B       		.uleb128 0xb
 1678 004e 3B       		.uleb128 0x3b
 1679 004f 0B       		.uleb128 0xb
 1680 0050 01       		.uleb128 0x1
 1681 0051 13       		.uleb128 0x13
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 40


 1682 0052 00       		.byte	0
 1683 0053 00       		.byte	0
 1684 0054 07       		.uleb128 0x7
 1685 0055 28       		.uleb128 0x28
 1686 0056 00       		.byte	0
 1687 0057 03       		.uleb128 0x3
 1688 0058 0E       		.uleb128 0xe
 1689 0059 1C       		.uleb128 0x1c
 1690 005a 0B       		.uleb128 0xb
 1691 005b 00       		.byte	0
 1692 005c 00       		.byte	0
 1693 005d 08       		.uleb128 0x8
 1694 005e 2E       		.uleb128 0x2e
 1695 005f 01       		.byte	0x1
 1696 0060 3F       		.uleb128 0x3f
 1697 0061 0C       		.uleb128 0xc
 1698 0062 03       		.uleb128 0x3
 1699 0063 0E       		.uleb128 0xe
 1700 0064 3A       		.uleb128 0x3a
 1701 0065 0B       		.uleb128 0xb
 1702 0066 3B       		.uleb128 0x3b
 1703 0067 05       		.uleb128 0x5
 1704 0068 27       		.uleb128 0x27
 1705 0069 0C       		.uleb128 0xc
 1706 006a 49       		.uleb128 0x49
 1707 006b 13       		.uleb128 0x13
 1708 006c 11       		.uleb128 0x11
 1709 006d 01       		.uleb128 0x1
 1710 006e 12       		.uleb128 0x12
 1711 006f 01       		.uleb128 0x1
 1712 0070 40       		.uleb128 0x40
 1713 0071 06       		.uleb128 0x6
 1714 0072 9642     		.uleb128 0x2116
 1715 0074 0C       		.uleb128 0xc
 1716 0075 01       		.uleb128 0x1
 1717 0076 13       		.uleb128 0x13
 1718 0077 00       		.byte	0
 1719 0078 00       		.byte	0
 1720 0079 09       		.uleb128 0x9
 1721 007a 05       		.uleb128 0x5
 1722 007b 00       		.byte	0
 1723 007c 03       		.uleb128 0x3
 1724 007d 0E       		.uleb128 0xe
 1725 007e 3A       		.uleb128 0x3a
 1726 007f 0B       		.uleb128 0xb
 1727 0080 3B       		.uleb128 0x3b
 1728 0081 05       		.uleb128 0x5
 1729 0082 49       		.uleb128 0x49
 1730 0083 13       		.uleb128 0x13
 1731 0084 02       		.uleb128 0x2
 1732 0085 0A       		.uleb128 0xa
 1733 0086 00       		.byte	0
 1734 0087 00       		.byte	0
 1735 0088 0A       		.uleb128 0xa
 1736 0089 05       		.uleb128 0x5
 1737 008a 00       		.byte	0
 1738 008b 03       		.uleb128 0x3
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 41


 1739 008c 08       		.uleb128 0x8
 1740 008d 3A       		.uleb128 0x3a
 1741 008e 0B       		.uleb128 0xb
 1742 008f 3B       		.uleb128 0x3b
 1743 0090 05       		.uleb128 0x5
 1744 0091 49       		.uleb128 0x49
 1745 0092 13       		.uleb128 0x13
 1746 0093 02       		.uleb128 0x2
 1747 0094 0A       		.uleb128 0xa
 1748 0095 00       		.byte	0
 1749 0096 00       		.byte	0
 1750 0097 0B       		.uleb128 0xb
 1751 0098 34       		.uleb128 0x34
 1752 0099 00       		.byte	0
 1753 009a 03       		.uleb128 0x3
 1754 009b 0E       		.uleb128 0xe
 1755 009c 3A       		.uleb128 0x3a
 1756 009d 0B       		.uleb128 0xb
 1757 009e 3B       		.uleb128 0x3b
 1758 009f 05       		.uleb128 0x5
 1759 00a0 49       		.uleb128 0x49
 1760 00a1 13       		.uleb128 0x13
 1761 00a2 02       		.uleb128 0x2
 1762 00a3 0A       		.uleb128 0xa
 1763 00a4 00       		.byte	0
 1764 00a5 00       		.byte	0
 1765 00a6 0C       		.uleb128 0xc
 1766 00a7 34       		.uleb128 0x34
 1767 00a8 00       		.byte	0
 1768 00a9 03       		.uleb128 0x3
 1769 00aa 08       		.uleb128 0x8
 1770 00ab 3A       		.uleb128 0x3a
 1771 00ac 0B       		.uleb128 0xb
 1772 00ad 3B       		.uleb128 0x3b
 1773 00ae 05       		.uleb128 0x5
 1774 00af 49       		.uleb128 0x49
 1775 00b0 13       		.uleb128 0x13
 1776 00b1 02       		.uleb128 0x2
 1777 00b2 0A       		.uleb128 0xa
 1778 00b3 00       		.byte	0
 1779 00b4 00       		.byte	0
 1780 00b5 0D       		.uleb128 0xd
 1781 00b6 0F       		.uleb128 0xf
 1782 00b7 00       		.byte	0
 1783 00b8 0B       		.uleb128 0xb
 1784 00b9 0B       		.uleb128 0xb
 1785 00ba 49       		.uleb128 0x49
 1786 00bb 13       		.uleb128 0x13
 1787 00bc 00       		.byte	0
 1788 00bd 00       		.byte	0
 1789 00be 0E       		.uleb128 0xe
 1790 00bf 2E       		.uleb128 0x2e
 1791 00c0 01       		.byte	0x1
 1792 00c1 3F       		.uleb128 0x3f
 1793 00c2 0C       		.uleb128 0xc
 1794 00c3 03       		.uleb128 0x3
 1795 00c4 0E       		.uleb128 0xe
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 42


 1796 00c5 3A       		.uleb128 0x3a
 1797 00c6 0B       		.uleb128 0xb
 1798 00c7 3B       		.uleb128 0x3b
 1799 00c8 0B       		.uleb128 0xb
 1800 00c9 27       		.uleb128 0x27
 1801 00ca 0C       		.uleb128 0xc
 1802 00cb 49       		.uleb128 0x49
 1803 00cc 13       		.uleb128 0x13
 1804 00cd 11       		.uleb128 0x11
 1805 00ce 01       		.uleb128 0x1
 1806 00cf 12       		.uleb128 0x12
 1807 00d0 01       		.uleb128 0x1
 1808 00d1 40       		.uleb128 0x40
 1809 00d2 06       		.uleb128 0x6
 1810 00d3 9642     		.uleb128 0x2116
 1811 00d5 0C       		.uleb128 0xc
 1812 00d6 01       		.uleb128 0x1
 1813 00d7 13       		.uleb128 0x13
 1814 00d8 00       		.byte	0
 1815 00d9 00       		.byte	0
 1816 00da 0F       		.uleb128 0xf
 1817 00db 05       		.uleb128 0x5
 1818 00dc 00       		.byte	0
 1819 00dd 03       		.uleb128 0x3
 1820 00de 0E       		.uleb128 0xe
 1821 00df 3A       		.uleb128 0x3a
 1822 00e0 0B       		.uleb128 0xb
 1823 00e1 3B       		.uleb128 0x3b
 1824 00e2 0B       		.uleb128 0xb
 1825 00e3 49       		.uleb128 0x49
 1826 00e4 13       		.uleb128 0x13
 1827 00e5 02       		.uleb128 0x2
 1828 00e6 0A       		.uleb128 0xa
 1829 00e7 00       		.byte	0
 1830 00e8 00       		.byte	0
 1831 00e9 10       		.uleb128 0x10
 1832 00ea 34       		.uleb128 0x34
 1833 00eb 00       		.byte	0
 1834 00ec 03       		.uleb128 0x3
 1835 00ed 0E       		.uleb128 0xe
 1836 00ee 3A       		.uleb128 0x3a
 1837 00ef 0B       		.uleb128 0xb
 1838 00f0 3B       		.uleb128 0x3b
 1839 00f1 0B       		.uleb128 0xb
 1840 00f2 49       		.uleb128 0x49
 1841 00f3 13       		.uleb128 0x13
 1842 00f4 02       		.uleb128 0x2
 1843 00f5 0A       		.uleb128 0xa
 1844 00f6 00       		.byte	0
 1845 00f7 00       		.byte	0
 1846 00f8 11       		.uleb128 0x11
 1847 00f9 2E       		.uleb128 0x2e
 1848 00fa 01       		.byte	0x1
 1849 00fb 3F       		.uleb128 0x3f
 1850 00fc 0C       		.uleb128 0xc
 1851 00fd 03       		.uleb128 0x3
 1852 00fe 0E       		.uleb128 0xe
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 43


 1853 00ff 3A       		.uleb128 0x3a
 1854 0100 0B       		.uleb128 0xb
 1855 0101 3B       		.uleb128 0x3b
 1856 0102 0B       		.uleb128 0xb
 1857 0103 27       		.uleb128 0x27
 1858 0104 0C       		.uleb128 0xc
 1859 0105 49       		.uleb128 0x49
 1860 0106 13       		.uleb128 0x13
 1861 0107 11       		.uleb128 0x11
 1862 0108 01       		.uleb128 0x1
 1863 0109 12       		.uleb128 0x12
 1864 010a 01       		.uleb128 0x1
 1865 010b 40       		.uleb128 0x40
 1866 010c 06       		.uleb128 0x6
 1867 010d 9642     		.uleb128 0x2116
 1868 010f 0C       		.uleb128 0xc
 1869 0110 00       		.byte	0
 1870 0111 00       		.byte	0
 1871 0112 00       		.byte	0
 1872              		.section	.debug_loc,"",%progbits
 1873              	.Ldebug_loc0:
 1874              	.LLST4:
 1875 0000 BE040000 		.4byte	.LFB4-.Ltext0
 1876 0004 C0040000 		.4byte	.LCFI12-.Ltext0
 1877 0008 0200     		.2byte	0x2
 1878 000a 7D       		.byte	0x7d
 1879 000b 00       		.sleb128 0
 1880 000c C0040000 		.4byte	.LCFI12-.Ltext0
 1881 0010 C2040000 		.4byte	.LCFI13-.Ltext0
 1882 0014 0200     		.2byte	0x2
 1883 0016 7D       		.byte	0x7d
 1884 0017 10       		.sleb128 16
 1885 0018 C2040000 		.4byte	.LCFI13-.Ltext0
 1886 001c C4040000 		.4byte	.LCFI14-.Ltext0
 1887 0020 0200     		.2byte	0x2
 1888 0022 7D       		.byte	0x7d
 1889 0023 28       		.sleb128 40
 1890 0024 C4040000 		.4byte	.LCFI14-.Ltext0
 1891 0028 0C070000 		.4byte	.LFE4-.Ltext0
 1892 002c 0200     		.2byte	0x2
 1893 002e 77       		.byte	0x77
 1894 002f 28       		.sleb128 40
 1895 0030 00000000 		.4byte	0
 1896 0034 00000000 		.4byte	0
 1897              	.LLST3:
 1898 0038 CC030000 		.4byte	.LFB3-.Ltext0
 1899 003c CE030000 		.4byte	.LCFI9-.Ltext0
 1900 0040 0200     		.2byte	0x2
 1901 0042 7D       		.byte	0x7d
 1902 0043 00       		.sleb128 0
 1903 0044 CE030000 		.4byte	.LCFI9-.Ltext0
 1904 0048 D0030000 		.4byte	.LCFI10-.Ltext0
 1905 004c 0200     		.2byte	0x2
 1906 004e 7D       		.byte	0x7d
 1907 004f 10       		.sleb128 16
 1908 0050 D0030000 		.4byte	.LCFI10-.Ltext0
 1909 0054 D2030000 		.4byte	.LCFI11-.Ltext0
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 44


 1910 0058 0200     		.2byte	0x2
 1911 005a 7D       		.byte	0x7d
 1912 005b 20       		.sleb128 32
 1913 005c D2030000 		.4byte	.LCFI11-.Ltext0
 1914 0060 BE040000 		.4byte	.LFE3-.Ltext0
 1915 0064 0200     		.2byte	0x2
 1916 0066 77       		.byte	0x77
 1917 0067 20       		.sleb128 32
 1918 0068 00000000 		.4byte	0
 1919 006c 00000000 		.4byte	0
 1920              	.LLST2:
 1921 0070 88020000 		.4byte	.LFB2-.Ltext0
 1922 0074 8A020000 		.4byte	.LCFI6-.Ltext0
 1923 0078 0200     		.2byte	0x2
 1924 007a 7D       		.byte	0x7d
 1925 007b 00       		.sleb128 0
 1926 007c 8A020000 		.4byte	.LCFI6-.Ltext0
 1927 0080 8C020000 		.4byte	.LCFI7-.Ltext0
 1928 0084 0200     		.2byte	0x2
 1929 0086 7D       		.byte	0x7d
 1930 0087 10       		.sleb128 16
 1931 0088 8C020000 		.4byte	.LCFI7-.Ltext0
 1932 008c 8E020000 		.4byte	.LCFI8-.Ltext0
 1933 0090 0200     		.2byte	0x2
 1934 0092 7D       		.byte	0x7d
 1935 0093 20       		.sleb128 32
 1936 0094 8E020000 		.4byte	.LCFI8-.Ltext0
 1937 0098 CC030000 		.4byte	.LFE2-.Ltext0
 1938 009c 0200     		.2byte	0x2
 1939 009e 77       		.byte	0x77
 1940 009f 20       		.sleb128 32
 1941 00a0 00000000 		.4byte	0
 1942 00a4 00000000 		.4byte	0
 1943              	.LLST1:
 1944 00a8 C0000000 		.4byte	.LFB1-.Ltext0
 1945 00ac C2000000 		.4byte	.LCFI3-.Ltext0
 1946 00b0 0200     		.2byte	0x2
 1947 00b2 7D       		.byte	0x7d
 1948 00b3 00       		.sleb128 0
 1949 00b4 C2000000 		.4byte	.LCFI3-.Ltext0
 1950 00b8 C4000000 		.4byte	.LCFI4-.Ltext0
 1951 00bc 0200     		.2byte	0x2
 1952 00be 7D       		.byte	0x7d
 1953 00bf 10       		.sleb128 16
 1954 00c0 C4000000 		.4byte	.LCFI4-.Ltext0
 1955 00c4 C6000000 		.4byte	.LCFI5-.Ltext0
 1956 00c8 0200     		.2byte	0x2
 1957 00ca 7D       		.byte	0x7d
 1958 00cb 20       		.sleb128 32
 1959 00cc C6000000 		.4byte	.LCFI5-.Ltext0
 1960 00d0 88020000 		.4byte	.LFE1-.Ltext0
 1961 00d4 0200     		.2byte	0x2
 1962 00d6 77       		.byte	0x77
 1963 00d7 20       		.sleb128 32
 1964 00d8 00000000 		.4byte	0
 1965 00dc 00000000 		.4byte	0
 1966              	.LLST0:
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 45


 1967 00e0 00000000 		.4byte	.LFB0-.Ltext0
 1968 00e4 02000000 		.4byte	.LCFI0-.Ltext0
 1969 00e8 0200     		.2byte	0x2
 1970 00ea 7D       		.byte	0x7d
 1971 00eb 00       		.sleb128 0
 1972 00ec 02000000 		.4byte	.LCFI0-.Ltext0
 1973 00f0 04000000 		.4byte	.LCFI1-.Ltext0
 1974 00f4 0200     		.2byte	0x2
 1975 00f6 7D       		.byte	0x7d
 1976 00f7 0C       		.sleb128 12
 1977 00f8 04000000 		.4byte	.LCFI1-.Ltext0
 1978 00fc 06000000 		.4byte	.LCFI2-.Ltext0
 1979 0100 0200     		.2byte	0x2
 1980 0102 7D       		.byte	0x7d
 1981 0103 18       		.sleb128 24
 1982 0104 06000000 		.4byte	.LCFI2-.Ltext0
 1983 0108 C0000000 		.4byte	.LFE0-.Ltext0
 1984 010c 0200     		.2byte	0x2
 1985 010e 77       		.byte	0x77
 1986 010f 18       		.sleb128 24
 1987 0110 00000000 		.4byte	0
 1988 0114 00000000 		.4byte	0
 1989              		.section	.debug_aranges,"",%progbits
 1990 0000 1C000000 		.4byte	0x1c
 1991 0004 0200     		.2byte	0x2
 1992 0006 00000000 		.4byte	.Ldebug_info0
 1993 000a 04       		.byte	0x4
 1994 000b 00       		.byte	0
 1995 000c 0000     		.2byte	0
 1996 000e 0000     		.2byte	0
 1997 0010 00000000 		.4byte	.Ltext0
 1998 0014 0C070000 		.4byte	.Letext0-.Ltext0
 1999 0018 00000000 		.4byte	0
 2000 001c 00000000 		.4byte	0
 2001              		.section	.debug_line,"",%progbits
 2002              	.Ldebug_line0:
 2003 0000 66010000 		.section	.debug_str,"MS",%progbits,1
 2003      02002C00 
 2003      00000201 
 2003      FB0E0D00 
 2003      01010101 
 2004              	.LASF7:
 2005 0000 6C6F6E67 		.ascii	"long long int\000"
 2005      206C6F6E 
 2005      6720696E 
 2005      7400
 2006              	.LASF16:
 2007 000e 70636139 		.ascii	"pca9532\000"
 2007      35333200 
 2008              	.LASF3:
 2009 0016 756E7369 		.ascii	"unsigned int\000"
 2009      676E6564 
 2009      20696E74 
 2009      00
 2010              	.LASF17:
 2011 0023 65657072 		.ascii	"eepromWrite\000"
 2011      6F6D5772 
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 46


 2011      69746500 
 2012              	.LASF28:
 2013 002f 65657072 		.ascii	"eepromPoll\000"
 2013      6F6D506F 
 2013      6C6C00
 2014              	.LASF14:
 2015 003a 72657443 		.ascii	"retCode\000"
 2015      6F646500 
 2016              	.LASF8:
 2017 0042 46414C53 		.ascii	"FALSE\000"
 2017      4500
 2018              	.LASF15:
 2019 0048 73746174 		.ascii	"status\000"
 2019      757300
 2020              	.LASF21:
 2021 004f 61646472 		.ascii	"address\000"
 2021      65737300 
 2022              	.LASF4:
 2023 0057 6C6F6E67 		.ascii	"long long unsigned int\000"
 2023      206C6F6E 
 2023      6720756E 
 2023      7369676E 
 2023      65642069 
 2024              	.LASF23:
 2025 006e 64657641 		.ascii	"devAddr\000"
 2025      64647200 
 2026              	.LASF18:
 2027 0076 61646472 		.ascii	"addr\000"
 2027      00
 2028              	.LASF11:
 2029 007b 70427566 		.ascii	"pBuf\000"
 2029      00
 2030              	.LASF1:
 2031 0080 756E7369 		.ascii	"unsigned char\000"
 2031      676E6564 
 2031      20636861 
 2031      7200
 2032              	.LASF9:
 2033 008e 54525545 		.ascii	"TRUE\000"
 2033      00
 2034              	.LASF12:
 2035 0093 70427566 		.ascii	"pBuf2\000"
 2035      3200
 2036              	.LASF25:
 2037 0099 474E5520 		.ascii	"GNU C11 7.3.1 20180622 (release) [ARM/embedded-7-br"
 2037      43313120 
 2037      372E332E 
 2037      31203230 
 2037      31383036 
 2038 00cc 616E6368 		.ascii	"anch revision 261907] -mcpu=arm7tdmi -mthumb -mthum"
 2038      20726576 
 2038      6973696F 
 2038      6E203236 
 2038      31393037 
 2039 00ff 622D696E 		.ascii	"b-interwork -gdwarf-2 -O0\000"
 2039      74657277 
 2039      6F726B20 
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 47


 2039      2D676477 
 2039      6172662D 
 2040              	.LASF22:
 2041 0119 65657072 		.ascii	"eepromStartRead\000"
 2041      6F6D5374 
 2041      61727452 
 2041      65616400 
 2042              	.LASF20:
 2043 0129 65657072 		.ascii	"eepromPageRead\000"
 2043      6F6D5061 
 2043      67655265 
 2043      616400
 2044              	.LASF27:
 2045 0138 433A5C45 		.ascii	"C:\\Embedded\\2138MiniDemo\\2138\000"
 2045      6D626564 
 2045      6465645C 
 2045      32313338 
 2045      4D696E69 
 2046              	.LASF2:
 2047 0156 73686F72 		.ascii	"short unsigned int\000"
 2047      7420756E 
 2047      7369676E 
 2047      65642069 
 2047      6E7400
 2048              	.LASF5:
 2049 0169 7369676E 		.ascii	"signed char\000"
 2049      65642063 
 2049      68617200 
 2050              	.LASF13:
 2051 0175 6C656E32 		.ascii	"len2\000"
 2051      00
 2052              	.LASF0:
 2053 017a 74553136 		.ascii	"tU16\000"
 2053      00
 2054              	.LASF10:
 2055 017f 74426F6F 		.ascii	"tBool\000"
 2055      6C00
 2056              	.LASF6:
 2057 0185 73686F72 		.ascii	"short int\000"
 2057      7420696E 
 2057      7400
 2058              	.LASF26:
 2059 018f 65657072 		.ascii	"eeprom.c\000"
 2059      6F6D2E63 
 2059      00
 2060              	.LASF19:
 2061 0198 70446174 		.ascii	"pData\000"
 2061      6100
 2062              	.LASF24:
 2063 019e 6275726E 		.ascii	"burnEnd\000"
 2063      456E6400 
 2064              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [AR
ARM GAS  C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 eeprom.c
C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s:22     .text:00000000 eepromPoll
C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s:30     .text:00000000 $t
C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s:172    .text:000000c0 eepromStartRead
C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s:475    .text:00000288 eepromPageRead
C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s:696    .text:000003cc eepromWrite
C:\Users\embedded\AppData\Local\Temp\ccaSKCnE.s:868    .text:000004be pca9532

UNDEFINED SYMBOLS
i2cStart
i2cPutChar
i2cCheckStatus
i2cStop
i2cRepeatStart
i2cGetChar
i2cWriteWithWait
